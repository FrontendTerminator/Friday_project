{"version":3,"sources":["components/login/Login.module.css","components/registration/Registration.module.css","components/passwordRecovery/PasswordRecovery.module.css","components/superComponents/c2-SuperButton/SuperButton1.module.css","components/superComponents/c1-SuperInputText/SuperInputText.module.css","components/profile/Profile.module.css","components/page404/Page404.module.css","components/superComponents/c2-SuperButton/SuperButton.module.css","components/superComponents/c3-SuperCheckbox/SuperCheckbox.module.css","common/preloader.module.css","components/testPage/TestPage.module.css","components/navigation/Navigation.module.css","reportWebVitals.ts","components/superComponents/c2-SuperButton/SuperButton1.tsx","api/auth-api.ts","components/registration/registrationReducer.ts","components/login/auth-reducer.ts","images/tms-loading.gif","common/preloader.tsx","components/login/Login.tsx","components/superComponents/c1-SuperInputText/SuperInputText.tsx","components/registration/Registration.tsx","components/profile/Profile.tsx","images/kot.jpg","components/page404/Page404.tsx","components/passwordRecovery/passwordRecoveryReducer.ts","components/passwordRecovery/PasswordRecovery.tsx","components/newPassword/NewPassword.tsx","components/superComponents/c2-SuperButton/SuperButton.tsx","components/superComponents/c3-SuperCheckbox/SuperCheckbox.tsx","components/testPage/TestPage.tsx","components/navigation/Navigation.tsx","App.tsx","store/store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SuperButton1","red","className","restProps","finalClassName","s","btn","default","instance","axios","create","baseURL","withCredentials","authAPI","post","payload","delete","ApiRegister","email","password","response","data","passwordRecoveryApi","domain","from","message","initialState","status","isRegister","error","setStatusAC","type","setIsRegisterAC","setErrorAC","initState","userData","name","avatar","publicCardPacksCount","isLoading","isAuthSuccess","setUserData","setIsLoading","value","setError","setIsAuthSuccess","Preloader","preloader","src","alt","Login","useState","rememberMe","formData","setFormData","dispatch","useDispatch","changeHandler","e","target","currentTarget","checked","useSelector","state","auth","to","PATH","profile","style","container","loading","placeholder","input","onChange","checkbox","onClick","preventDefault","test","a","res","button","disabled","passwordRecovery","registration","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","key","Registration","emailValue","setEmailValue","passwordOneValue","setPasswordOneValue","passwordTwoValue","setPasswordTwoValue","register","useEffect","validator","login","form","signIn","Profile","isAuth","Page404","photo404","backgroundImage","kot","mainBlock","image","serverResponseStatus","serverRequestStatus","setRequestStatusAC","PasswordRecovery","inputValue","setInputValue","newPassword","pageBlock","secondBlock","currentPageDomain","window","location","host","success","catch","passwordRecoveryTC","NewPassword","SuperButton","SuperCheckbox","onChangeChecked","children","TestPage","text","setText","showAlert","alert","setChecked","column","Navigation","navigationBlock","page404","testPage","pageNotFound","App","path","render","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dd80b93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__2Z8ne\",\"input\":\"Login_input__zuRwJ\",\"button\":\"Login_button__1Cp3v\",\"error\":\"Login_error__xqEQJ\",\"loading\":\"Login_loading__1yopJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Registration_container__3VgyV\",\"input\":\"Registration_input__12Mad\",\"button\":\"Registration_button__2o3tW\",\"error\":\"Registration_error__2tPsH\",\"signIn\":\"Registration_signIn__1yVFz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageBlock\":\"PasswordRecovery_pageBlock__sDugA\",\"secondBlock\":\"PasswordRecovery_secondBlock__1TSVl\",\"input\":\"PasswordRecovery_input__3FiHv\",\"error\":\"PasswordRecovery_error__3wXw-\",\"button\":\"PasswordRecovery_button__29LP6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SuperButton1_btn__38i74\",\"default\":\"SuperButton1_default__19djC\",\"disabled\":\"SuperButton1_disabled__b37VM\",\"red\":\"SuperButton1_red__1vLIb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3c4N5\",\"errorInput\":\"SuperInputText_errorInput__18Fxk\",\"error\":\"SuperInputText_error__2cdAa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__a3st2\",\"loading\":\"Profile_loading__XWVgp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"Page404_mainBlock__3gMO_\",\"image\":\"Page404_image__27YBu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3HJNO\",\"red\":\"SuperButton_red__3O53E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__-VPPs\",\"spanClassName\":\"SuperCheckbox_spanClassName__1QDb-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__1VK1h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"TestPage_blue__3sxPH\",\"column\":\"TestPage_column__Hk85v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationBlock\":\"Navigation_navigationBlock__1Cg77\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton1.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton1: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.btn} ${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton1;\r\n","import axios from \"axios\";\r\nimport {AuthDataType} from \"../components/login/Login\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    /*baseURL: 'http://localhost:7542/2.0/',*/\r\n    withCredentials: true\r\n})\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.post('/auth/me')\r\n    },\r\n    signIn(payload: AuthDataType) {\r\n        return instance.post('/auth/login', payload)\r\n    },\r\n    signOut() {\r\n        return instance.delete('/auth/me')\r\n    }\r\n}\r\n\r\nexport const ApiRegister = {\r\n    setRegister (email:string,password:string){\r\n        return  instance.post('auth/register',{email,password}).then(response =>{\r\n            return response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const passwordRecoveryApi = {\r\n    passwordRecovery(email: string, domain: string) {\r\n        return axios.post('https://neko-back.herokuapp.com/2.0/auth/forgot',\r\n            {\r\n                email: email,\r\n                from: \"Test-front-admin <mikutishvili.koba@gmail.com>\",\r\n                message: `<div>Password recovery. Click this <a href='http://${domain}/#/newPassword/$token$'>link</a></div>`\r\n            }\r\n        )\r\n    }\r\n}","import {Dispatch} from \"react\";\r\nimport {ApiRegister, authAPI} from \"../../api/auth-api\";\r\n\r\nlet initialState: ReducerStateType = {\r\n    status: \"free\",\r\n    isRegister: false,\r\n    error: \"\",\r\n}\r\nexport const setStatusAC = (status: TypeStatus) => {\r\n    return {\r\n        type: '/register_reducer/SET_STATUS',\r\n        status\r\n    } as const\r\n}\r\nexport const setIsRegisterAC = (isRegister: boolean) => {\r\n    return {\r\n        type: '/register_reducer/SET_IS_REGISTER',\r\n        isRegister\r\n    } as const\r\n}\r\nexport const setErrorAC = (error: string) => {\r\n    return {\r\n        type: '/register_reducer/SET_ERROR',\r\n        error\r\n    } as const\r\n}\r\nexport const ReducerRegister = (state: ReducerStateType = initialState, action: ReducerActionType): ReducerStateType => {\r\n    switch (action.type) {\r\n\r\n        case \"/register_reducer/SET_IS_REGISTER\": {\r\n            return {\r\n                ...state,\r\n                isRegister: action.isRegister\r\n            }\r\n        }\r\n        case \"/register_reducer/SET_STATUS\": {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case \"/register_reducer/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const registerTC = (email: string, password: string) => async (dispatch: Dispatch<ReducerActionType>) => {\r\n    try {\r\n        dispatch(setStatusAC(\"loading\"))\r\n        await ApiRegister.setRegister(email, password)\r\n        dispatch(setStatusAC(\"success\"))\r\n        dispatch(setIsRegisterAC(true))\r\n    } catch (e) {\r\n        const error: TypeError = e.response.data;\r\n        dispatch(setStatusAC(\"error\"))\r\n        dispatch(setErrorAC(error.error))\r\n\r\n    }\r\n\r\n\r\n}\r\nexport const registrIsAuthTC = () => async (dispatch: Dispatch<ReducerActionType>) => {\r\n    let result = await authAPI.authMe()\r\n    result.data && dispatch(setIsRegisterAC(true))\r\n\r\n\r\n}\r\nexport type TypeStatus = 'free' | 'loading' | 'success' | 'error'\r\nexport type ReducerStateType = {\r\n    status: TypeStatus\r\n    isRegister: boolean\r\n    error: string\r\n}\r\ntype TypeError = {\r\n    emailRegExp: {}\r\n    error: string\r\n    in: string\r\n    isEmailValid: boolean\r\n    isPassValid: boolean\r\n    passwordRegExp: string\r\n}\r\n\r\n\r\nexport type TypesetIsRegister = ReturnType<typeof setIsRegisterAC>\r\n\r\nexport type ReducerActionType =\r\n    | ReturnType<typeof setStatusAC>\r\n    | TypesetIsRegister\r\n    | ReturnType<typeof setErrorAC>","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {authAPI} from \"../../api/auth-api\";\r\nimport {AuthDataType} from \"./Login\";\r\nimport {setIsRegisterAC, TypesetIsRegister} from \"../registration/registrationReducer\";\r\n\r\nexport type UserDataType = {\r\n    email: string | null\r\n    name: string | null\r\n    avatar?: string | null\r\n    publicCardPacksCount: number | null\r\n}\r\n\r\nexport type InitStateType = {\r\n    userData: UserDataType\r\n    isLoading: boolean\r\n    error: null | string\r\n    isAuthSuccess: boolean\r\n}\r\n\r\nlet initState: InitStateType = {\r\n    userData: {\r\n        email: null as string | null,\r\n        name: null as string | null,\r\n        avatar: null as string | null,\r\n        publicCardPacksCount: null as number | null\r\n    },\r\n    isLoading: false,\r\n    error: null as string | null,\r\n    isAuthSuccess: false\r\n}\r\n\r\nexport const authReducer = (state = initState, action: ActionsType): InitStateType => {\r\n    switch (action.type) {\r\n        case \"friday-project/login/SET_USER_DATA\":\r\n            return {\r\n                ...state, userData: {...action.payload}\r\n            }\r\n\r\n        case \"friday-project/login/SET_IS_LOADING\":\r\n            return {\r\n                ...state, isLoading: action.value\r\n            }\r\n\r\n        case \"friday-project/login/SET_ERROR\":\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n\r\n        case \"friday-project/login/SET_IS_AUTH_SUCCESS\":\r\n            return {\r\n                ...state, isAuthSuccess: action.value\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Actions\r\nconst setUserData = (payload: UserDataType) => ({type: 'friday-project/login/SET_USER_DATA', payload} as const)\r\nconst setIsLoading = (value: boolean) => ({type: 'friday-project/login/SET_IS_LOADING', value} as const)\r\nexport const setError = (error: string) => ({type: 'friday-project/login/SET_ERROR', error} as const)\r\nconst setIsAuthSuccess = (value: boolean) => ({type: 'friday-project/login/SET_IS_AUTH_SUCCESS', value} as const)\r\n\r\n// Thunks\r\ntype ThunkType = ThunkAction<void, AppRootStateType, unknown, ActionsType>\r\ntype ThunkDispatchType = ThunkDispatch<AppRootStateType, unknown, ActionsType|TypesetIsRegister>\r\n\r\n\r\n\r\n\r\nexport const signIn = (payload: AuthDataType): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n        let res = await authAPI.signIn(payload)\r\n        dispatch(setIsLoading(false))\r\n        dispatch(setIsAuthSuccess(true))\r\n        dispatch(setUserData(res.data))\r\n        dispatch(setError(''))\r\n    } catch (e) {\r\n        let error = e.response.data.error\r\n        dispatch(setIsLoading(false))\r\n        dispatch(setError(error))\r\n    }\r\n}\r\n\r\nexport const signOut = (): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n         await authAPI.signOut()\r\n        dispatch(setIsLoading(false))\r\n        dispatch(setIsAuthSuccess(false))\r\n        dispatch(setIsRegisterAC(false))\r\n\r\n    } catch (e) {\r\n        let error = e.response.data.error\r\n        dispatch(setIsLoading(false))\r\n        dispatch(setError(error))\r\n    }\r\n}\r\n\r\nexport const authMe = (): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    try {\r\n        let res = await authAPI.authMe()\r\n        dispatch(setIsAuthSuccess(true))\r\n        dispatch(setUserData(res.data))\r\n    } catch (e) {\r\n        let error = e.response.data.error\r\n        dispatch(setIsLoading(false))\r\n        dispatch(setError(error))\r\n    }\r\n}\r\n\r\ntype SetUserDataActionType = ReturnType<typeof setUserData>\r\ntype SetIsLoadingActionType = ReturnType<typeof setIsLoading>\r\ntype SetErrorActionType = ReturnType<typeof setError>\r\ntype SetIsAuthSuccess = ReturnType<typeof setIsAuthSuccess>\r\n\r\ntype ActionsType = SetUserDataActionType | SetIsLoadingActionType | SetErrorActionType | SetIsAuthSuccess","export default __webpack_public_path__ + \"static/media/tms-loading.45dec5c5.gif\";","import React from 'react';\r\nimport preloader from \"../images/tms-loading.gif\";\r\nimport s from './preloader.module.css'\r\n\r\nconst Preloader = ()=>{\r\n    return<div className={s.preloader}>\r\n        <img src={preloader} alt={'Preloader'}/>\r\n    </div>\r\n}\r\nexport default  Preloader;","import React, {ChangeEvent, useState} from 'react'\r\nimport style from './Login.module.css'\r\nimport SuperButton1 from \"../superComponents/c2-SuperButton/SuperButton1\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\nimport {setError, signIn} from \"./auth-reducer\";\r\nimport Preloader from \"../../common/preloader\";\r\n\r\nexport type AuthDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport const Login = () => {\r\n    const [formData, setFormData] = useState<AuthDataType>({email: '', password: '', rememberMe: false})\r\n    const dispatch = useDispatch()\r\n\r\n    const changeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const target = e.currentTarget\r\n        const value = target.type === 'checkbox' ? target.checked : target.value\r\n        setFormData({...formData, [target.name]: value})\r\n    }\r\n\r\n    const clickHandler = (e: React.MouseEvent<HTMLElement>) => {\r\n        e.preventDefault()\r\n        let validator = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n        if (!validator.test(formData.email)) {\r\n            dispatch(setError('Please, enter correct email'))\r\n        } else dispatch(signIn(formData))\r\n    }\r\n\r\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.auth.isLoading)\r\n    const error = useSelector<AppRootStateType, null | string>(state => state.auth.error)\r\n    const isAuthSuccess = useSelector<AppRootStateType, boolean>(state => state.auth.isAuthSuccess)\r\n\r\n    return (\r\n        <>\r\n            {isAuthSuccess\r\n                ? <Redirect to={PATH.profile}/>\r\n                : <form name=\"login\" className={style.container}>\r\n                    {isLoading\r\n                        ? <div>\r\n                            <div className={style.loading}>Loading...</div>\r\n                            <Preloader/>\r\n                        </div>\r\n                        : <>\r\n                            <h3>Sign in</h3>\r\n                            <input name='email'\r\n                                   type=\"text\"\r\n                                   placeholder='email'\r\n                                   className={style.input}\r\n                                   onChange={changeHandler}\r\n                            />\r\n                            <input name='password'\r\n                                   type=\"password\"\r\n                                   placeholder='password'\r\n                                   className={style.input}\r\n                                   onChange={changeHandler}\r\n                            />\r\n                            {error && <span className={style.error}>{error}</span>}\r\n                            <div>\r\n                                <input name='rememberMe'\r\n                                       type=\"checkbox\"\r\n                                       className={style.checkbox}\r\n                                       onChange={changeHandler}\r\n                                />\r\n                                <span>Remember me</span>\r\n                            </div>\r\n                            <SuperButton1 onClick={clickHandler}\r\n                                          className={style.button}\r\n                                          disabled={isLoading}\r\n                            >\r\n                                Sign in\r\n                            </SuperButton1>\r\n                            <NavLink to={PATH.passwordRecovery}>Forgot Password?</NavLink>\r\n                            <NavLink to={PATH.registration}>Sign up</NavLink>\r\n                        </>\r\n                    }\r\n                </form>\r\n            }\r\n        </>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? s.errorInput: ''} ${className ? className : s.superInput}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <div className={finalSpanClassName}>{error}</div>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {useEffect, useState} from 'react';\r\nimport s from './Registration.module.css'\r\nimport SuperInputText from \"../superComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../superComponents/c2-SuperButton/SuperButton1\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {registerTC, registrIsAuthTC, setErrorAC, TypeStatus} from \"./registrationReducer\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\nimport Preloader from \"../../common/preloader\";\r\nimport style from \"../login/Login.module.css\";\r\n\r\nexport const Registration = () => {\r\n    const [emailValue, setEmailValue] = useState<string>('')\r\n    const [passwordOneValue, setPasswordOneValue] = useState<string>('')\r\n    const [passwordTwoValue, setPasswordTwoValue] = useState<string>('')\r\n    const dispatch = useDispatch()\r\n    const status = useSelector<AppRootStateType, TypeStatus>(state => state.register.status)\r\n    const isRegister = useSelector<AppRootStateType, boolean>(state => state.register.isRegister)\r\n    const error = useSelector<AppRootStateType, string>(state => state.register.error)\r\n    useEffect(()=>{\r\n        dispatch(registrIsAuthTC())\r\n    },[dispatch])\r\n    let validator = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n    const onChangeTextEmail = (value: string) => {\r\n        setEmailValue(value)\r\n    }\r\n    const onChangePasswordOne = (value: string) => {\r\n        setPasswordOneValue(value)\r\n    }\r\n    const onChangePasswordTwo = (value: string) => {\r\n        setPasswordTwoValue(value)\r\n    }\r\n\r\n    const sendForm = () => {\r\n        if (passwordOneValue !== passwordTwoValue) {\r\n            dispatch(setErrorAC('Password confirmation does not match'))\r\n            return\r\n        }else if(!validator.test(emailValue)){\r\n            dispatch(setErrorAC('Please, enter correct email'))\r\n            return\r\n        }\r\n\r\n\r\n\r\n        dispatch(registerTC(emailValue, passwordOneValue))\r\n    }\r\n\r\n    return <>\r\n        {isRegister && <Redirect to={PATH.login}/>}\r\n        <div className={s.container}>\r\n            {status === \"loading\" ? <Preloader/> :\r\n                <div>\r\n                    <h3>Registration</h3>\r\n                    <form className={s.form}>\r\n                        <div>\r\n\r\n                            <SuperInputText  className={style.input}   placeholder='email' onChangeText={onChangeTextEmail}\r\n                                            value={emailValue}/>\r\n                        </div>\r\n                        <div>\r\n\r\n                            <SuperInputText type={'password'}    placeholder='password'  className={style.input} onChangeText={onChangePasswordOne}\r\n                                            value={passwordOneValue}/>\r\n                        </div>\r\n                        <div>\r\n                            <SuperInputText type={'password'}   placeholder='password'  className={style.input} onChangeText={onChangePasswordTwo}\r\n                                            value={passwordTwoValue}/>\r\n                        </div>\r\n\r\n                        <div className={s.button}>\r\n                            <SuperButton onClick={sendForm}>Register</SuperButton>\r\n                        </div>\r\n\r\n                        <div className={s.error}>\r\n                            {error}\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>}\r\n          <div className={s.signIn}>\r\n              <NavLink to={PATH.login}>Sign in</NavLink>\r\n          </div>\r\n\r\n        </div>\r\n    </>\r\n\r\n\r\n}","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {authMe, signOut, UserDataType} from \"../login/auth-reducer\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\nimport SuperButton1 from \"../superComponents/c2-SuperButton/SuperButton1\";\r\nimport style from './Profile.module.css'\r\nimport Preloader from \"../../common/preloader\";\r\n\r\nexport const Profile = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const clickHandler = () => {\r\n        dispatch(signOut())\r\n    }\r\n\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.auth.isAuthSuccess)\r\n\r\n    const userData = useSelector<AppRootStateType, UserDataType>(state => state.auth.userData)\r\n\r\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.auth.isLoading)\r\n\r\n    useEffect(() => {\r\n        dispatch(authMe())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            {isAuth\r\n                ? <div className={style.container}>\r\n                    {isLoading\r\n                        ? <div>\r\n                            <div className={style.loading}>Loading...</div>\r\n                            <Preloader/>\r\n                        </div>\r\n                        : <>\r\n                            <p>Avatar: {userData.avatar}</p>\r\n                            <p>Name: {userData.name}</p>\r\n                            <p>Email: {userData.email}</p>\r\n                            <p>Card packs: {userData.publicCardPacksCount}</p>\r\n                            <SuperButton1 onClick={clickHandler}>Sign out</SuperButton1>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                : <Redirect to={PATH.login}/>\r\n            }\r\n        </>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/kot.da7a033b.jpg\";","import React from 'react';\r\nimport kot from './../../images/kot.jpg'\r\nimport s from './Page404.module.css'\r\n\r\nexport const Page404 = () => {\r\n\r\n    const photo404 = {\r\n        backgroundImage: `url(${kot})`\r\n    }\r\n\r\n    return (\r\n        <div className={s.mainBlock}>\r\n            <h2>“We are so sorry, but page not found”</h2>\r\n            <div style={photo404} className={s.image}></div>\r\n        </div>\r\n    )\r\n}","import {Dispatch} from \"redux\"\r\nimport {passwordRecoveryApi} from \"../../api/auth-api\";\r\n\r\nconst initialState: PasswordRecoveryReducerStateType = {\r\n    serverResponseStatus: false,\r\n    error: \"\",\r\n    serverRequestStatus: 'undefined'\r\n}\r\n\r\nexport const passwordRecoveryReducer = (state: PasswordRecoveryReducerStateType = initialState, action: PasswordRecoveryReducerActionType): PasswordRecoveryReducerStateType => {\r\n    switch (action.type) {\r\n        case \"passwordRecovery/CHANGE-REQUEST-STATUS\":\r\n            return {...state, serverResponseStatus: action.status}\r\n        case \"passwordRecovery/SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"passwordRecovery/SET-REQUEST-STATUS\":\r\n            return {...state, serverRequestStatus: action.serverRequestStatus}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const changeRequestStatusAC = (status: boolean) => {\r\n    return {type: 'passwordRecovery/CHANGE-REQUEST-STATUS', status} as const\r\n}\r\nexport const setErrorAC = (error: string) => {\r\n    return {type: 'passwordRecovery/SET-ERROR', error} as const\r\n}\r\nexport const setRequestStatusAC = (serverRequestStatus: ServerRequestStatusType) => {\r\n    return {type: 'passwordRecovery/SET-REQUEST-STATUS', serverRequestStatus} as const\r\n}\r\n\r\n// Thunk\r\nexport const passwordRecoveryTC = (email: string, currentPageDomain: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setRequestStatusAC(\"active\"))\r\n        passwordRecoveryApi.passwordRecovery(email, currentPageDomain)\r\n            .then(res => {\r\n                if (res.data.success === true) {\r\n                    dispatch(changeRequestStatusAC(true))\r\n                    dispatch(setRequestStatusAC(\"completed\"))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(setErrorAC(error.response.data.error))\r\n                dispatch(setRequestStatusAC(\"completed\"))\r\n            })\r\n    }\r\n}\r\n\r\nexport type PasswordRecoveryReducerStateType = {\r\n    serverResponseStatus: boolean\r\n    error: string\r\n    serverRequestStatus: ServerRequestStatusType\r\n}\r\n\r\nexport type ServerRequestStatusType = 'active' | 'completed' | 'undefined'\r\n\r\ntype PasswordRecoveryReducerActionType =\r\n    | ReturnType<typeof changeRequestStatusAC>\r\n    | ReturnType<typeof setErrorAC>\r\n    | ReturnType<typeof setRequestStatusAC>","import React, {ChangeEvent, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport s from './PasswordRecovery.module.css'\r\nimport {passwordRecoveryTC, ServerRequestStatusType, setErrorAC} from \"./passwordRecoveryReducer\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\nimport Preloader from \"../../common/preloader\";\r\nimport SuperButton1 from \"../superComponents/c2-SuperButton/SuperButton1\";\r\n\r\n\r\nexport const PasswordRecovery = () => {\r\n\r\n    const [inputValue, setInputValue] = useState<string>(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n    const error = useSelector<AppRootStateType, string>(state => state.passwordRecovery.error)\r\n    const serverResponseStatus = useSelector<AppRootStateType, boolean>(state => state.passwordRecovery.serverResponseStatus)\r\n    const serverRequestStatus = useSelector<AppRootStateType, ServerRequestStatusType>(state => state.passwordRecovery.serverRequestStatus)\r\n\r\n    const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setInputValue(e.currentTarget.value)\r\n    }\r\n\r\n    const OnButtonClick = () => {\r\n        let validator = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n        if (validator.test(inputValue) == false) {\r\n            dispatch(setErrorAC('Please, enter correct email'))\r\n        } else {\r\n            const currentPageDomain = window.location.host\r\n            dispatch(passwordRecoveryTC(inputValue, currentPageDomain))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {serverResponseStatus && <Redirect to={PATH.newPassword}/>}\r\n            <div className={s.pageBlock}>\r\n                {serverRequestStatus === 'active'\r\n                    ? <Preloader/>\r\n                    : <div className={s.secondBlock}>\r\n                        <h3>Password recovery</h3>\r\n                        <input type=\"text\"\r\n                               placeholder={'your email'}\r\n                               onChange={onInputChange}\r\n                               value={inputValue}\r\n                               className={s.input}\r\n                        />\r\n                        <div className={s.error}>{error}</div>\r\n                        <SuperButton1 className={s.button}\r\n                                onClick={OnButtonClick}>send\r\n                        </SuperButton1>\r\n                        <NavLink to={PATH.registration}>Sign up</NavLink>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const NewPassword = () => {\r\n    return (\r\n        <div>\r\n            new password\r\n        </div>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`; //\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from 'react';\r\nimport SuperInputText from \"../superComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../superComponents/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../superComponents/c3-SuperCheckbox/SuperCheckbox\";\r\nimport s from \"./TestPage.module.css\"\r\nimport Preloader from \"../../common/preloader\";\r\n\r\nexport const TestPage = () => {\r\n\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return(\r\n        <div>\r\n            <hr/>\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    //className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >delete</SuperButton>\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >some text</SuperCheckbox>\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChange={testOnChange}\r\n                />\r\n                <Preloader/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from \"./Navigation.module.css\"\r\nimport {PATH} from \"../../App\";\r\n\r\nexport const Navigation = () => {\r\n    return (\r\n        <div className={s.navigationBlock}>\r\n            <NavLink to={PATH.login}>login</NavLink>\r\n            <NavLink to={PATH.registration}>registration</NavLink>\r\n            <NavLink to={PATH.profile}>profile</NavLink>\r\n            <NavLink to={PATH.page404}>page 404</NavLink>\r\n            <NavLink to={PATH.passwordRecovery}>password recovery</NavLink>\r\n            <NavLink to={PATH.newPassword}>new password</NavLink>\r\n            <NavLink to={PATH.testPage}>test page</NavLink>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Login} from \"./components/login/Login\";\r\nimport {Registration} from \"./components/registration/Registration\";\r\nimport {Profile} from \"./components/profile/Profile\";\r\nimport {Page404} from \"./components/page404/Page404\";\r\nimport {PasswordRecovery} from \"./components/passwordRecovery/PasswordRecovery\";\r\nimport {NewPassword} from \"./components/newPassword/NewPassword\";\r\nimport {TestPage} from \"./components/testPage/TestPage\";\r\nimport {Navigation} from \"./components/navigation/Navigation\";\r\n\r\nexport const PATH = {\r\n    login: \"/login\",\r\n    registration: \"/registration\",\r\n    profile: \"/profile\",\r\n    page404: \"/page404\",\r\n    passwordRecovery: \"/passwordRecovery\",\r\n    newPassword: \"/newPassword\",\r\n    testPage: \"/testPage\",\r\n    pageNotFound: \"*\"\r\n}\r\n\r\nexport const App = () => {\r\n    return (\r\n        <HashRouter>\r\n            <div>\r\n                <Navigation/>\r\n                <div>\r\n                    <Switch>\r\n                        <Route path={PATH.login}\r\n                               render={() => <Login/>}/>\r\n                        <Route path={PATH.registration}\r\n                               render={() => <Registration/>}/>\r\n                        <Route path={PATH.profile}\r\n                               render={() => <Profile/>}/>\r\n                        <Route path={PATH.page404}\r\n                               render={() => <Page404/>}/>\r\n                        <Route path={PATH.passwordRecovery}\r\n                               render={() => <PasswordRecovery/>}/>\r\n                        <Route path={PATH.newPassword}\r\n                               render={() => <NewPassword/>}/>\r\n                        <Route path={PATH.testPage}\r\n                               render={() => <TestPage/>}/>\r\n                        <Redirect from={PATH.pageNotFound} to={PATH.page404}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import { createStore } from \"redux\";\r\nimport { applyMiddleware } from \"redux\";\r\nimport { combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {ReducerRegister} from \"../components/registration/registrationReducer\";\r\nimport {authReducer} from \"../components/login/auth-reducer\";\r\nimport {passwordRecoveryReducer} from \"../components/passwordRecovery/passwordRecoveryReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    register:ReducerRegister,\r\n    auth: authReducer,\r\n    passwordRecovery: passwordRecoveryReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./App\";\nimport { Provider } from 'react-redux';\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}