{"version":3,"sources":["reportWebVitals.ts","components/superComponents/c2-SuperButton/SuperButton1.tsx","api/auth-api.ts","components/registration/registrationReducer.ts","components/login/auth-reducer.ts","images/tms-loading.gif","common/preloader.tsx","components/login/Login.tsx","components/superComponents/c1-SuperInputText/SuperInputText.tsx","components/registration/Registration.tsx","components/profile/Profile.tsx","images/kot.jpg","components/page404/Page404.tsx","components/passwordRecovery/passwordRecoveryReducer.ts","components/passwordRecovery/PasswordRecovery.tsx","components/newPassword/NewPassword.tsx","components/superComponents/c2-SuperButton/SuperButton.tsx","components/superComponents/c3-SuperCheckbox/SuperCheckbox.tsx","components/testPage/TestPage.tsx","components/navigation/Navigation.tsx","components/packs/paskReducer.ts","components/superComponents/c4-SuperDoubleRange/superDoubleRange.tsx","components/packs/Pagination.tsx","components/cards/cardsReducer.ts","components/packs/packs.tsx","components/cards/Cards.tsx","App.tsx","store/store.ts","index.tsx","components/cards/Cards.module.css","components/login/Login.module.css","components/registration/Registration.module.css","components/passwordRecovery/PasswordRecovery.module.css","components/superComponents/c2-SuperButton/SuperButton1.module.css","components/superComponents/c1-SuperInputText/SuperInputText.module.css","components/profile/Profile.module.css","components/page404/Page404.module.css","components/packs/packs.module.css","components/superComponents/c2-SuperButton/SuperButton.module.css","components/superComponents/c3-SuperCheckbox/SuperCheckbox.module.css","common/preloader.module.css","components/testPage/TestPage.module.css","components/navigation/Navigation.module.css","components/superComponents/c4-SuperDoubleRange/SuperRange.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SuperButton1","red","className","restProps","finalClassName","s","btn","default","instance","axios","create","baseURL","withCredentials","authAPI","post","payload","delete","ApiRegister","email","password","response","data","passwordRecoveryApi","domain","from","message","packsApi","page","get","name","cardsPack","id","put","_id","cardsApi","cardPackId","res","cardsPackId","newTitle","card","cardsPack_id","question","cardId","initialState","status","isRegister","error","setStatusAC","type","setIsRegisterAC","setErrorAC","initState","userData","avatar","publicCardPacksCount","isLoading","isAuthSuccess","setUserData","setIsLoading","value","setError","setIsAuthSuccess","Preloader","preloader","src","alt","Login","useState","rememberMe","formData","setFormData","dispatch","useDispatch","changeHandler","e","target","currentTarget","checked","useSelector","state","auth","to","PATH","profile","style","container","loading","placeholder","input","onChange","checkbox","onClick","preventDefault","test","a","button","disabled","passwordRecovery","registration","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","key","Registration","emailValue","setEmailValue","passwordOneValue","setPasswordOneValue","passwordTwoValue","setPasswordTwoValue","register","useEffect","validator","login","form","signIn","Profile","isAuth","Page404","photo404","backgroundImage","kot","mainBlock","image","serverResponseStatus","serverRequestStatus","setRequestStatusAC","PasswordRecovery","inputValue","setInputValue","newPassword","pageBlock","secondBlock","currentPageDomain","window","location","host","success","catch","passwordRecoveryTC","NewPassword","SuperButton","SuperCheckbox","onChangeChecked","children","TestPage","text","setText","showAlert","alert","setChecked","column","Navigation","navigationBlock","page404","packs","cards","testPage","setStatusPacksAC","getPacksAC","setErrorPacksAC","getPackTC","getState","result","SuperDoubleRange","setValue2","min","max","setValue1","range","Slider","event","valueLabelDisplay","aria-labelledby","Pagination","clickPage","setPageAC","innerHTML","arr","i","push","fontWeight","map","pages","active","serverAnswerStatus","changeServerAnswerStatusAC","Packs","cardPacks","packValue","setPackValue","modal","setModal","setId","searchPack","setSearch","updateButton","setUpdateButton","value1","value2","sortPacks","setSortPacks","sortByMax","b","cardsCount","sortByMin","filterPack","filter","pack","toLowerCase","match","sort","addPack","dataset","action","setPack","update","updatePackTC","deletePack","deletePackTC","onCardsClick","packsId","getCardsTC","search","fontSize","marginRight","textAlign","pagination","color","popup","hide","popupContent","data-update","table","header","cell","Button","data-action","variant","size","gridTable","cardPack","tableRow","updated","path","data-id","Cards","deleteCard","deleteCardAC","console","log","deleteCardTC","updateCard","prompt","updateCardAC","updateCardTC","newCard","addCardTC","answer","grade","pageNotFound","startPage","App","render","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"oJAceA,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,8FCiBCQ,EAhBsC,SAAC,GAKhD,IAHEC,EAGH,EAHGA,IAAKC,EAGR,EAHQA,UACFC,EAEN,mCACKC,EAAc,UAAMC,IAAEC,IAAR,YAAeL,EAAMI,IAAEJ,IAAMI,IAAEE,QAA/B,YAA0CL,GAE9D,OACI,oCACIA,UAAWE,GACPD,K,iDCjBVK,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,uCAETC,iBAAiB,IAERC,EAAU,WAEf,OAAOL,EAASM,KAAK,aAFhBD,EAAU,SAIZE,GACH,OAAOP,EAASM,KAAK,cAAeC,IAL/BF,EAAU,WAQf,OAAOL,EAASQ,OAAO,aAGlBC,EAAc,SACXC,EAAeC,GACvB,OAAOX,EAASM,KAAK,gBAAiB,CAACI,QAAOC,aAAWzB,MAAK,SAAA0B,GAC1D,OAAOA,EAASC,SAKfC,EAAsB,SACdJ,EAAeK,GAC5B,OAAOd,IAAMK,KAAK,kDACd,CACII,MAAOA,EACPM,KAAM,iDACNC,QAAQ,sDAAD,OAAwDF,EAAxD,2CAEX,CAACX,iBAAiB,KAmCjBc,EAAW,SACXC,GACL,OAAOnB,EAASoB,IAAT,wCAAiED,IACnEjC,MAAK,SAAA0B,GAAQ,OAAIA,EAASC,SAH1BK,EAAW,SAKXG,GACL,OAAOrB,EAASM,KAA2B,aAAc,CACrDgB,UAAW,CACPD,UAGHnC,MAAK,SAAA0B,GAAQ,OAAIA,EAASC,SAX1BK,EAAW,SAaRK,GACR,OAAOvB,EAASQ,OAAT,wBAAuDe,IACzDrC,MAAK,SAAA0B,GAAQ,OAAIA,EAASC,SAf1BK,EAAW,SAiBRK,EAAwBF,GAChC,OAAOrB,EAASwB,IAAT,aAAiD,CACpDF,UAAW,CACPG,IAAKF,EACLF,UAGHnC,MAAK,SAAA0B,GAAQ,OAAIA,EAASC,SA8C1Ba,EAAW,SACXC,GACL,OAAO3B,EAASoB,IAAT,+CAA2EO,IAC7EzC,MAAK,SAAA0C,GAAG,OAAIA,EAAIf,SAHhBa,EAAW,SAKZG,EAAqBC,GACzB,OAAO9B,EAASM,KAAT,aAAiD,CAACyB,KAAM,CAACC,aAAcH,EAAaI,SAAUH,KAChG5C,MAAK,SAAA0C,GAAG,OAAIA,EAAIf,SAPhBa,EAAW,SASTQ,GACP,OAAOlC,EAASQ,OAAT,wBAAiC0B,KAVnCR,EAAW,SAYTQ,EAAgBJ,GACvB,OAAO9B,EAASwB,IAA4B,aAAc,CAACO,KAAM,CAACN,IAAKS,EAAQD,SAAUH,KACpF5C,MAAK,SAAA0C,GAAG,OAAIA,EAAIf,SCxJzBsB,EAAiC,CACjCC,OAAQ,OACRC,YAAY,EACZC,MAAO,IAEEC,EAAc,SAACH,GACxB,MAAO,CACHI,KAAM,+BACNJ,WAGKK,EAAkB,SAACJ,GAC5B,MAAO,CACHG,KAAM,oCACNH,eAGKK,EAAa,SAACJ,GACvB,MAAO,CACHE,KAAM,8BACNF,UCHJK,EAA2B,CAC3BC,SAAU,CACNlC,MAAO,KACPW,KAAM,KACNwB,OAAQ,GACRC,qBAAsB,MAE1BC,WAAW,EACXT,MAAO,KACPU,eAAe,GA+BbC,EAAc,SAAC1C,GAAD,MAA4B,CAACiC,KAAM,qCAAsCjC,YACvF2C,EAAe,SAACC,GAAD,MAAqB,CAACX,KAAM,sCAAuCW,UAC3EC,EAAW,SAACd,GAAD,MAAoB,CAACE,KAAM,iCAAkCF,UAC/Ee,EAAmB,SAACF,GAAD,MAAqB,CAACX,KAAM,2CAA4CW,UC/DlF,MAA0B,wC,iBCSzBG,EALE,WACd,OAAM,qBAAK5D,UAAWG,IAAE0D,UAAlB,SACF,qBAAKC,IAAKD,EAAWE,IAAK,iBCUrBC,EAAQ,WAAO,IAAD,EACSC,mBAAuB,CAACjD,MAAO,GAAIC,SAAU,GAAIiD,YAAY,IADtE,mBAChBC,EADgB,KACNC,EADM,KAEjBC,EAAWC,cAEXC,EAAgB,SAACC,GACnB,IAAMC,EAASD,EAAEE,cACXjB,EAAwB,aAAhBgB,EAAO3B,KAAsB2B,EAAOE,QAAUF,EAAOhB,MACnEW,EAAY,2BAAID,GAAL,kBAAgBM,EAAO9C,KAAO8B,MAWvCJ,EAAYuB,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,KAAKzB,aACvET,EAAQgC,aAA6C,SAAAC,GAAK,OAAIA,EAAMC,KAAKlC,SACzEU,EAAgBsB,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,KAAKxB,iBAEjF,OACI,mCACKA,EACK,cAAC,IAAD,CAAUyB,GAAIC,GAAKC,UACnB,sBAAMtD,KAAK,QAAQ3B,UAAWkF,IAAMC,UAApC,SACG9B,EACK,gCACE,qBAAKrD,UAAWkF,IAAME,QAAtB,wBACA,cAAC,EAAD,OAEF,qCACE,yCACA,uBAAOzD,KAAK,QACLmB,KAAK,OACLuC,YAAY,QACZrF,UAAWkF,IAAMI,MACjBC,SAAUhB,IAEjB,uBAAO5C,KAAK,WACLmB,KAAK,WACLuC,YAAY,WACZrF,UAAWkF,IAAMI,MACjBC,SAAUhB,IAEhB3B,GAAS,sBAAM5C,UAAWkF,IAAMtC,MAAvB,SAA+BA,IACzC,gCACI,uBAAOjB,KAAK,aACLmB,KAAK,WACL9C,UAAWkF,IAAMM,SACjBD,SAAUhB,IAEjB,kDAEJ,cAAC,EAAD,CAAckB,QA7CjB,SAACjB,GAClBA,EAAEkB,iBACF,IH4Ce7E,EG5CC,8DACD8E,KAAKxB,EAASnD,OAEtBqD,GHyCQxD,EGzCQsD,EHyCT,uCAAsC,WAAOE,GAAP,iBAAAuB,EAAA,sEAEpDvB,EAASb,GAAa,IAF8B,SAGpC7C,EAAeE,GAHqB,OAGhDqB,EAHgD,OAIpDmC,EAASb,GAAa,IACtBa,EAASV,GAAiB,IAC1BU,EAASd,EAAYrB,EAAIf,OACzBkD,EAASX,EAAS,KAPkC,kDAShDd,EAAQ,KAAE1B,SAASC,KAAKyB,MAC5ByB,EAASb,GAAa,IACtBa,EAASX,EAASd,IAXkC,0DAAtC,wDG1CVyB,EAASX,EAAS,iCA0CY1D,UAAWkF,IAAMW,OACjBC,SAAUzC,EAFxB,qBAMA,cAAC,IAAD,CAAS0B,GAAIC,GAAKe,iBAAlB,8BACA,cAAC,IAAD,CAAShB,GAAIC,GAAKgB,aAAlB,6B,wCCpBbC,GA3C2C,SAAC,GAUrD,IAREnD,EAQH,EARGA,KACAyC,EAOH,EAPGA,SAAUW,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZxD,EAKH,EALGA,MACA5C,EAIH,EAJGA,UAAWqG,EAId,EAJcA,cAERpG,EAEN,6GAeKqG,EAAkB,UAAMnG,KAAEyC,MAAR,YAAiByD,GAAgC,IACnEE,EAAmB,UAAM3D,EAAQzC,KAAEqG,WAAY,GAA5B,YAAkCxG,GAAwBG,KAAEsG,YAErF,OACI,qCACI,mCACI3D,KAAMA,EACNyC,SArBa,SAACf,GACtBe,GACGA,EAASf,GAEZ0B,GAAgBA,EAAa1B,EAAEE,cAAcjB,QAkBrC0C,WAhBe,SAAC3B,GACxB2B,GAAcA,EAAW3B,GAEf,UAAVA,EAAEkC,KACCN,GACAA,KAYKpG,UAAWuG,GAEPtG,IAEP2C,GAAS,qBAAK5C,UAAWsG,EAAhB,SAAqC1D,QCzC9C+D,GAAe,WAAO,IAAD,EACM1C,mBAAiB,IADvB,mBACvB2C,EADuB,KACXC,EADW,OAEkB5C,mBAAiB,IAFnC,mBAEvB6C,EAFuB,KAELC,EAFK,OAGkB9C,mBAAiB,IAHnC,mBAGvB+C,EAHuB,KAGLC,EAHK,KAIxB5C,EAAWC,cACX5B,EAASkC,aAA0C,SAAAC,GAAK,OAAIA,EAAMqC,SAASxE,UAC3EC,EAAaiC,aAAuC,SAAAC,GAAK,OAAIA,EAAMqC,SAASvE,cAC5EC,EAAQgC,aAAsC,SAAAC,GAAK,OAAIA,EAAMqC,SAAStE,SAC5EuE,qBAAU,WACN9C,EN+CuB,uCAAM,WAAOA,GAAP,SAAAuB,EAAA,sEACdjF,IADc,cAE1BQ,MAAQkD,EAAStB,GAAgB,IAFP,2CAAN,yDM9CzB,CAACsB,IACH,IAAI+C,EAAY,8DAyBhB,OAAO,qCACFzE,GAAc,cAAC,IAAD,CAAUoC,GAAIC,GAAKqC,QAClC,sBAAKrH,UAAWG,KAAEgF,UAAlB,UACgB,YAAXzC,EAAuB,cAAC,EAAD,IACpB,gCACI,8CACA,uBAAM1C,UAAWG,KAAEmH,KAAnB,UACI,8BAEI,cAAC,GAAD,CAAiBtH,UAAWkF,IAAMI,MAASD,YAAY,QAAQa,aAjC7D,SAACzC,GACvBoD,EAAcpD,IAiCsBA,MAAOmD,MAE3B,8BAEI,cAAC,GAAD,CAAgB9D,KAAM,WAAeuC,YAAY,WAAYrF,UAAWkF,IAAMI,MAAOY,aAnCjF,SAACzC,GACzBsD,EAAoBtD,IAmCgBA,MAAOqD,MAE3B,8BACI,cAAC,GAAD,CAAgBhE,KAAM,WAAcuC,YAAY,WAAYrF,UAAWkF,IAAMI,MAAOY,aApChF,SAACzC,GACzBwD,EAAoBxD,IAoCgBA,MAAOuD,MAG3B,qBAAKhH,UAAWG,KAAE0F,OAAlB,SACI,cAAC,EAAD,CAAaJ,QArCpB,WNmBK,IAACzE,EAAeC,EMlB9B6F,IAAqBE,EAGfI,EAAUzB,KAAKiB,GAOzBvC,GNQmBrD,EMRC4F,ENQc3F,EMRF6F,ENQd,uCAAqC,WAAOzC,GAAP,eAAAuB,EAAA,sEAEvDvB,EAASxB,EAAY,YAFkC,SAGjD9B,EAAwBC,EAAOC,GAHkB,OAIvDoD,EAASxB,EAAY,YACrBwB,EAAStB,GAAgB,IAL8B,gDAOjDH,EAAmB,KAAE1B,SAASC,KACpCkD,EAASxB,EAAY,UACrBwB,EAASrB,EAAWJ,EAAMA,QAT6B,yDAArC,wDMddyB,EAASrB,EAAW,gCAHpBqB,EAASrB,EAAW,0CAmCJ,wBAGJ,qBAAKhD,UAAWG,KAAEyC,MAAlB,SACKA,UAKnB,qBAAK5C,UAAWG,KAAEoH,OAAlB,SACI,cAAC,IAAD,CAASxC,GAAIC,GAAKqC,MAAlB,8B,oBCvEDG,GAAU,WAEnB,IAAMnD,EAAWC,cAMXmD,EAAS7C,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,KAAKxB,iBAEpEJ,EAAW0B,aAA4C,SAAAC,GAAK,OAAIA,EAAMC,KAAK5B,YAE3EG,EAAYuB,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,KAAKzB,aAQ7E,OANA8D,qBAAU,WACDM,GACDpD,EN4EU,uCAAiB,WAAOA,GAAP,iBAAAuB,EAAA,+EAEfjF,IAFe,OAE3BuB,EAF2B,OAG/BmC,EAASV,GAAiB,IAC1BU,EAASd,EAAYrB,EAAIf,OAJM,gDAM3ByB,EAAQ,KAAE1B,SAASC,KAAKyB,MAC5ByB,EAASb,GAAa,IACtBa,EAASX,EAASd,IARa,yDAAjB,yDM1Ef,CAACyB,IAGA,mCACKoD,EACK,qBAAKzH,UAAWkF,KAAMC,UAAtB,SACG9B,EACK,gCACE,qBAAKrD,UAAWkF,KAAME,QAAtB,wBACA,cAAC,EAAD,OAEF,qCACE,4BAAG,qBAAKtB,IAAKZ,EAASC,WACtB,uCAAUD,EAASvB,QACnB,wCAAWuB,EAASlC,SACpB,6CAAgBkC,EAASE,wBACzB,cAAC,EAAD,CAAcqC,QA9BjB,WACjBpB,ENwEe,uCAAiB,WAAOA,GAAP,eAAAuB,EAAA,sEAEhCvB,EAASb,GAAa,IAFU,SAGzB7C,IAHyB,OAIhC0D,EAASb,GAAa,IACtBa,EAASV,GAAiB,IAC1BU,EAAStB,GAAgB,IANO,gDAS5BH,EAAQ,KAAE1B,SAASC,KAAKyB,MAC5ByB,EAASb,GAAa,IACtBa,EAASX,EAASd,IAXc,yDAAjB,wDM3CK,2BAKV,cAAC,IAAD,CAAUmC,GAAIC,GAAKqC,WCjDtB,OAA0B,gC,oBCI5BK,GAAU,WAEnB,IAAMC,EAAW,CACbC,gBAAgB,OAAD,OAASC,GAAT,MAGnB,OACI,sBAAK7H,UAAWG,KAAE2H,UAAlB,UACI,qEACA,qBAAK5C,MAAOyC,EAAU3H,UAAWG,KAAE4H,Y,oBCVzCtF,GAAiD,CACnDuF,sBAAsB,EACtBpF,MAAO,GACPqF,oBAAqB,aAmBZjF,GAAa,SAACJ,GACvB,MAAO,CAACE,KAAM,6BAA8BF,UAEnCsF,GAAqB,SAACD,GAC/B,MAAO,CAACnF,KAAM,sCAAuCmF,wBClB5CE,GAAmB,WAAO,IAAD,EAEElE,mBAAiB,IAFnB,mBAE3BmE,EAF2B,KAEfC,EAFe,KAI5BhE,EAAWC,cACX1B,EAAQgC,aAAsC,SAAAC,GAAK,OAAIA,EAAMkB,iBAAiBnD,SAC9EoF,EAAuBpD,aAAuC,SAAAC,GAAK,OAAIA,EAAMkB,iBAAiBiC,wBAC9FC,EAAsBrD,aAAuD,SAAAC,GAAK,OAAIA,EAAMkB,iBAAiBkC,uBAgBnH,OACI,qCACKD,GAAwB,cAAC,IAAD,CAAUjD,GAAIC,GAAKsD,cAC5C,qBAAKtI,UAAWG,KAAEoI,UAAlB,SAC6B,WAAxBN,EACK,cAAC,EAAD,IACA,sBAAKjI,UAAWG,KAAEqI,YAAlB,UACE,mDACA,uBAAO1F,KAAK,OACLuC,YAAa,aACbE,SAxBL,SAACf,GACnB6D,EAAc7D,EAAEE,cAAcjB,QAwBPA,MAAO2E,EACPpI,UAAWG,KAAEmF,QAEpB,qBAAKtF,UAAWG,KAAEyC,MAAlB,SAA0BA,IAC1B,cAAC,EAAD,CAAc5C,UAAWG,KAAE0F,OACnBJ,QA1BN,WAElB,GAAkC,GADlB,8DACFE,KAAKyC,GACf/D,EAASrB,GAAW,oCACjB,CACH,IAAMyF,EAAoBC,OAAOC,SAASC,KAC1CvE,EDGsB,SAACrD,EAAeyH,GAC9C,OAAO,SAACpE,GACJA,EAAS6D,GAAmB,WAC5B9G,EAAqCJ,EAAOyH,GACvCjJ,MAAK,SAAA0C,IACuB,IAArBA,EAAIf,KAAK0H,UACTxE,EAhBT,CAACvB,KAAM,yCAA0CJ,QAgBT,IAC/B2B,EAAS6D,GAAmB,kBAGnCY,OAAM,SAAAlG,GACHyB,EAASrB,GAAWJ,EAAM1B,SAASC,KAAKyB,QACxCyB,EAAS6D,GAAmB,kBCfvBa,CAAmBX,EAAYK,MAmB5B,kBAGA,cAAC,IAAD,CAAS1D,GAAIC,GAAKgB,aAAlB,8BClDXgD,GAAc,WACvB,OACI,gD,oBCsBOC,GAhBqC,SAAC,GAK/C,IAHElJ,EAGH,EAHGA,IAAKC,EAGR,EAHQA,UACFC,EAEN,mCACKC,EAAc,UAAMH,EAAMI,KAAEJ,IAAMI,KAAEE,QAAtB,YAAiCL,GAErD,OACI,oCACIA,UAAWE,GACPD,K,oBCsBDiJ,GAhCyC,SAAC,GASpD,EAPGpG,KAOF,IANEyC,EAMH,EANGA,SAAU4D,EAMb,EANaA,gBACVnJ,EAKH,EALGA,UACAoJ,GAIH,EALc/C,cAKd,EAJG+C,UAEGnJ,EAEN,4FAOKsG,EAAmB,UAAMpG,KAAEqF,SAAR,YAAoBxF,GAAwB,IAErE,OACI,kCACI,mCACI8C,KAAM,WACNyC,SAZa,SAACf,GACtBe,GAAYA,EAASf,GACrB2E,GAAmBA,EAAgB3E,EAAEE,cAAcC,UAW3C3E,UAAWuG,GAEPtG,IAEPmJ,GAAY,sBAAMpJ,UAAWG,KAAEkG,cAAnB,SAAmC+C,Q,oBC/B/CC,GAAW,WAAO,IAAD,EAEFpF,mBAAiB,IAFf,mBAEnBqF,EAFmB,KAEbC,EAFa,KAGpB3G,EAAQ0G,EAAO,GAAK,QACpBE,EAAY,WACV5G,EACA6G,MAAM,gFAENA,MAAMH,IARY,EAYIrF,oBAAkB,GAZtB,mBAYnBU,EAZmB,KAYV+E,EAZU,KAe1B,OACI,gCACI,uBACA,sBAAK1J,UAAWG,KAAEwJ,OAAlB,UACI,cAAC,GAAD,CACIlG,MAAO6F,EACPpD,aAAcqD,EACdnD,QAASoD,EACT5G,MAAOA,IAGX,cAAC,GAAD,CACI7C,KAAG,EACH0F,QAAS+D,EAFb,oBAIA,cAAC,GAAD,CACI7E,QAASA,EACTwE,gBAAiBO,EAFrB,uBAIA,cAAC,GAAD,CACI/E,QAASA,EACTY,SAvBK,SAACf,GAAD,OAAsCkF,EAAWlF,EAAEE,cAAcC,YAyB1E,cAAC,EAAD,W,oBCxCHiF,GAAa,WACtB,OACI,sBAAK5J,UAAWG,KAAE0J,gBAAlB,UACI,cAAC,IAAD,CAAS9E,GAAIC,GAAKqC,MAAlB,mBACA,cAAC,IAAD,CAAStC,GAAIC,GAAKgB,aAAlB,0BACA,cAAC,IAAD,CAASjB,GAAIC,GAAKC,QAAlB,qBACA,cAAC,IAAD,CAASF,GAAIC,GAAK8E,QAAlB,sBACA,cAAC,IAAD,CAAS/E,GAAIC,GAAKe,iBAAlB,+BACA,cAAC,IAAD,CAAShB,GAAIC,GAAKsD,YAAlB,0BACA,cAAC,IAAD,CAASvD,GAAIC,GAAK+E,MAAlB,mBACA,cAAC,IAAD,CAAShF,GAAIC,GAAKgF,MAAlB,mBACA,cAAC,IAAD,CAASjF,GAAIC,GAAKiF,SAAlB,2BCXNxH,GAAiC,CACnCC,OAAO,OACPqH,MAAO,KACPnH,MAAM,GACNnB,KAAK,GASIyI,GAAmB,SAACxH,GAC7B,MAAO,CACHI,KAAM,mBACNJ,WAGFyH,GAAa,SAACJ,GAChB,MAAO,CACHjH,KAAM,kBACNiH,UAGKK,GAAkB,SAACxH,GAC5B,MAAO,CACHE,KAAM,kBACNF,UAqCKyH,GAAY,yDAAM,WAAOhG,EAAsCiG,GAA7C,iBAAA1E,EAAA,sEAEvBvB,EAAS6F,GAAiB,YAFH,SAGJ1I,EAAkB8I,IAAWP,MAAMtI,MAH/B,OAGnB8I,EAHmB,OAIvBlG,EAAS8F,GAAWI,IACpBlG,EAAS+F,GAAgB,KACzB/F,EAAS6F,GAAiB,YANH,kDAQjBtH,EAAmB,KAAE1B,SAASC,KAChCkD,EAAS+F,GAAgBxH,EAAMA,QAC/ByB,EAAS6F,GAAiB,YAVP,0DAAN,yD,iDC3BVM,GAhC+C,SAAC,GAKzD,IAHEC,EAGH,EAHGA,UAAUC,EAGb,EAHaA,IAAIC,EAGjB,EAHiBA,IAAIC,EAGrB,EAHqBA,UAatB,OACI,qBAAK5K,UAAWG,KAAE0K,MAAlB,SACI,cAACC,GAAA,EAAD,CACIrH,MAAO,CAACiH,EAAIC,GACZpF,SAZK,SAACwF,EAA8BtH,GAE5CmH,EAAUnH,EAAM,IAChBgH,EAAUhH,EAAM,KAURuH,kBAAkB,OAClBC,kBAAgB,eAChBN,IAAK,GACLD,IAAK,OCPNQ,GApBI,WAQf,IAPA,IAAM7G,EAAWC,cACX7C,EAAOmD,aAAqC,SAAAC,GAAK,OAAIA,EAAMkF,MAAMtI,QACjE0J,EAAY,SAACJ,GACf1G,EFCiB,SAAC5C,GACtB,MAAO,CACHqB,KAAM,iBACNrB,QEJS2J,EAAWL,EAAMrG,cAAc2G,YACxChH,EAASgG,OAEXiB,EAAM,GACCC,EAAI,EAAGA,GAAK,GAAIA,IACrBD,EAAIE,KAAKD,GAEb,OACI,gCACI,sBAAMrG,MAAO,CAACuG,WAAW,QAAzB,oBADJ,MACuDH,EAAII,KAAI,SAACC,EAAM9J,GAC/D,OAAO,sBAAgB7B,UAAS,UAAKyB,EAAK,IAAII,EAAK1B,KAAEyL,OAAO,GAA5B,YAAkCzL,KAAEsB,MAASgE,QAAS0F,EAA/E,SAA8FQ,GAAnF9J,U,SCd3BY,GAAiC,CACnCuH,MAAO,GACP6B,oBAAoB,GAoCXC,GAA6B,SAACpJ,GAAD,MAAsB,CAC5DI,KAAM,oCAAqCJ,W,8GC6JhCqJ,GAhLD,WACV,IAAM1H,EAAWC,cACX5B,EAASkC,aAA0C,SAAAC,GAAK,OAAIA,EAAMkF,MAAMrH,UACxEE,EAAQgC,aAAsC,SAAAC,GAAK,OAAIA,EAAMkF,MAAMnH,SACnEmH,EAAQnF,aAAuD,SAAAC,GAAK,uBAAIA,EAAMkF,MAAMA,aAAhB,aAAI,EAAmBiC,aAJjF,EAKkB/H,mBAAiB,IALnC,mBAKTgI,EALS,KAKEC,EALF,OAMUjI,oBAAkB,GAN5B,mBAMTkI,EANS,KAMFC,EANE,OAOInI,mBAA6B,IAPjC,mBAOTpC,EAPS,KAOLwK,EAPK,OAQgBpI,mBAAiB,IARjC,mBAQTqI,EARS,KAQGC,EARH,OASwBtI,oBAAkB,GAT1C,mBASTuI,EATS,KASKC,EATL,OAUYxI,mBAAiB,GAV7B,mBAUTyI,EAVS,KAUD9B,EAVC,OAWY3G,mBAAiB,IAX7B,mBAWT0I,EAXS,KAWDlC,EAXC,OAYgBxG,mBAAmB,UAZnC,mBAYX2I,EAZW,KAYAC,EAZA,KAahB,SAASC,EAAUlH,EAAcmH,GAC7B,OAAInH,EAAEoH,YAAcD,EAAEC,WACX,GAEC,EAGhB,SAASC,EAAUrH,EAAcmH,GAC7B,OAAInH,EAAEoH,YAAcD,EAAEC,WACX,GAEC,EAIhB,IAAME,EAAU,OAAGnD,QAAH,IAAGA,OAAH,EAAGA,EAAOoD,QAAO,SAAAC,GAC7B,GAAIA,EAAKzL,KAAK0L,cAAcC,MAAMhB,IAAec,EAAKJ,YAAcN,GAAUU,EAAKJ,YAAcL,EAAQ,CACrG,GAAkB,WAAdC,EACA,OAAOQ,EACJ,GAAkB,QAAdR,EACP,OAAO7C,EAAMwD,KAAKT,GACf,GAAkB,QAAdF,EACP,OAAO7C,EAAMwD,KAAKN,OAI9B9F,qBAAU,WACN9C,EAASgG,QAEV,CAAChG,IAGJ,IAAMmJ,EAAU,SAACzC,GAC8B,WAAvCA,EAAMrG,cAAc+I,QAAQC,QAC5BjB,GAAgB,GAChBJ,EAAMtB,EAAMrG,cAAc+I,QAAQ5L,IAClCuK,GAAS,IACqC,QAAvCrB,EAAMrG,cAAc+I,QAAQC,SACnCjB,GAAgB,GAChBL,GAAS,KAGXuB,GAAU,SAAC5C,GJEI,IAACpJ,EIDyB,WAAvCoJ,EAAMrG,cAAc+I,QAAQG,QAC5BvJ,EJgCgB,SAACxC,EAAoBF,GAArB,8CAAqC,WAAO0C,EAAsCiG,GAA7C,iBAAA1E,EAAA,sEAEzDvB,EAAS6F,GAAiB,YAF+B,SAGnD1I,EAAqBK,EAAGF,GAH2B,uBAIrCH,EAAkB8I,IAAWP,MAAMtI,MAJE,OAIrD8I,EAJqD,OAKzDlG,EAAS8F,GAAWI,IACpBlG,EAAS+F,GAAgB,KACzB/F,EAAS6F,GAAiB,YAP+B,kDAWnDtH,EAAmB,KAAE1B,SAASC,KACpCkD,EAAS+F,GAAgBxH,EAAMA,QAC/ByB,EAAS6F,GAAiB,YAb+B,0DAArC,wDIhCP2D,CAAahM,EAAIoK,IAC1BC,EAAa,IACbE,GAAS,IACqC,QAAvCrB,EAAMrG,cAAc+I,QAAQG,QACnCvJ,GJJc1C,EIIKsK,EJJN,uCAAiB,WAAO5H,EAAsCiG,GAA7C,iBAAA1E,EAAA,sEAElCvB,EAAS6F,GAAiB,YAFQ,SAG5B1I,EAAkBG,GAHU,uBAIdH,EAAkB8I,IAAWP,MAAMtI,MAJrB,OAI9B8I,EAJ8B,OAKlClG,EAAS8F,GAAWI,IACpBlG,EAAS+F,GAAgB,KACzB/F,EAAS6F,GAAiB,YAPQ,kDAS5BtH,EAAmB,KAAE1B,SAASC,KACpCkD,EAAS+F,GAAgBxH,EAAMA,QAC/ByB,EAAS6F,GAAiB,YAXQ,0DAAjB,0DIKjBgC,EAAa,IACbE,GAAS,IAGP0B,GAAa,SAAC/C,GAChB1G,EJKoB,SAACxC,GAAD,8CAA0B,WAAOwC,EAAsCiG,GAA7C,iBAAA1E,EAAA,sEAE9CvB,EAAS6F,GAAiB,YAFoB,SAGxC1I,EAAqBK,GAHmB,uBAI1BL,EAAkB8I,IAAWP,MAAMtI,MAJT,OAI1C8I,EAJ0C,OAK9ClG,EAAS8F,GAAWI,IACpBlG,EAAS+F,GAAgB,KACzB/F,EAAS6F,GAAiB,YAPoB,kDAWxCtH,EAAmB,KAAE1B,SAASC,KACpCkD,EAAS+F,GAAgBxH,EAAMA,QAC/ByB,EAAS6F,GAAiB,YAboB,0DAA1B,wDILX6D,CAAahD,EAAMrG,cAAc+I,QAAQ5L,MAShDmM,GAAe,SAACC,GAClB5J,EDjDkB,SAAC4J,GAAD,OAAqB,SAAC5J,GAC5CA,EAASyH,IAA2B,IACpC9J,EAAkBiM,GACbzO,MAAK,SAAA0C,GACFmC,EAfsC,CAACvB,KAAM,kBAAmBkH,MAe5C9H,EAAI8H,QACxB3F,EAASyH,IAA2B,OAEvChD,OAAM,SAAAlG,GACHyB,EAASyH,IAA2B,IACpCrC,MAAM7G,OCwCDsL,CAAWD,KAUxB,OAAO,qCACH,sBAAKjO,UAAWG,KAAEgO,OAAlB,UACI,gCACI,sBAAMjJ,MAAO,CAACkJ,SAAS,OAAOC,YAAY,QAA1C,qBACA,uBAAOhJ,YAAY,aAAa5B,MAAO6I,EAAY/G,SAlB1C,SAACwF,GAClBwB,EAAUxB,EAAMrG,cAAcjB,QAiBqDX,KAAK,YAEpF,gCACI,qBAAKoC,MAAO,CAACuG,WAAW,OAAO6C,UAAU,UAAzC,6CAEA,cAAC,GAAD,CAAkB7D,UAAWA,EAAWG,UAAWA,EAAWD,IAAKgC,EAAQjC,IAAKgC,OAEpF,sBAAK1M,UAAWG,KAAEoN,KAAlB,UACI,cAAC,KAAD,CAAsB9H,QAnBlB,WACZoH,EAAa,UAmBL,cAAC,KAAD,CAAyBpH,QAjBrB,WACZoH,EAAa,gBAmBb,qBAAK7M,UAAWG,KAAEoO,WAAlB,SACI,cAAC,GAAD,MAGJ,qBAAKrJ,MAAO,CAACsJ,MAAO,OAApB,SAA6B5L,GAASA,IACtC,qBAAK5C,UAAWmM,EAAQhM,KAAEsO,MAAQtO,KAAEuO,KAApC,SACI,sBAAK1O,UAAWG,KAAEwO,aAAlB,UACI,uBAAOlL,MAAOwI,EAAW1G,SAxCb,SAACwF,GACrBmB,EAAanB,EAAMrG,cAAcjB,QAuC2BX,KAAK,SACxD0J,EAAe,cAAC,EAAD,CAAcoC,cAAa,SAAUnJ,QAASkI,GAA9C,oBACZ,cAAC,EAAD,CAAciB,cAAa,MAAOnJ,QAASkI,GAA3C,sBAIA,YAAXjL,EAAuB,cAAC,EAAD,IAEpB,sBAAK1C,UAAWG,KAAE0O,MAAlB,UAEI,sBAAK7O,UAAWG,KAAE2O,OAAlB,UACI,qBAAK9O,UAAWG,KAAE4O,KAAlB,kBACA,qBAAK/O,UAAWG,KAAE4O,KAAlB,yBACA,qBAAK/O,UAAWG,KAAE4O,KAAlB,qBACA,qBAAK/O,UAAWG,KAAE4O,KAAlB,iBACA,qBAAK/O,UAAWG,KAAE4O,KAAlB,SACI,eAACC,GAAA,EAAD,CACIhP,UAAWG,KAAEC,IACb6O,cAAa,MACbxJ,QAAS+H,EACT0B,QAAQ,YACRV,MAAM,UACNW,KAAM,QANV,cAOG,cAAC,KAAD,YAGX,qBAAKnP,UAAWG,KAAEiP,UAAlB,SACKlC,GAAcA,EAAWxB,KAAI,SAAC2D,GAE3B,OACI,sBAAKrP,UAAWG,KAAEmP,SAAlB,UACI,qBAAKtP,UAAWG,KAAE4O,KAAlB,SAAyBM,EAAS1N,OAClC,qBAAK3B,UAAWG,KAAE4O,KAAlB,SAAyBM,EAASrC,aAClC,qBAAKhN,UAAWG,KAAE4O,KAAlB,SAAyBM,EAASE,UAClC,qBAAKvP,UAAWG,KAAE4O,KAAlB,SAAyBM,EAASG,OAClC,sBAAKxP,UAAWG,KAAE4O,KAAlB,UACI,eAACC,GAAA,EAAD,CACIvJ,QAASqI,GACT2B,UAASJ,EAAStN,IAClBmN,QAAQ,YACRV,MAAM,UACNW,KAAM,QALV,cAMG,cAAC,KAAD,OACH,eAACH,GAAA,EAAD,CACIC,cAAa,SACbxJ,QAAS+H,EACTiC,UAASJ,EAAStN,IAClBmN,QAAQ,YACRV,MAAM,UACNW,KAAM,QANV,cAOG,cAAC,KAAD,OACH,cAAC,IAAD,CAAS1J,QAAS,kBAAMuI,GAAaqB,EAAStN,MACrCgD,GAAIC,GAAKgF,MADlB,wBArByBqF,EAASE,iBArD3D,S,oBC1GEG,GAAQ,WAEjB,IAAMrL,EAAWC,cACX0F,EAAQpF,aAAoD,SAAAC,GAAK,OAAIA,EAAMmF,MAAMA,SACjF6B,EAAqBjH,aAAuC,SAAAC,GAAK,OAAIA,EAAMmF,MAAM6B,sBACjFhK,EAAK+C,aAAkD,SAAAC,GAAK,uBAAIA,EAAMkF,MAAMA,aAAhB,aAAI,EAAmBiC,UAAU,GAAGjK,OAQhG4N,EAAa,SAACnN,GAChB6B,EF0DoB,SAAC7B,GAAD,OAAoB,SAAC6B,GAC7CA,EAASyH,IAA2B,IACpC9J,EAAoBQ,GACfhD,MAAK,SAAA0C,GACFmC,EAnCgB,SAAC7B,GAAD,MAAqB,CAACM,KAAM,oBAAqBN,UAmCxDoN,CAAapN,IACtB6B,EAASyH,IAA2B,IACpC+D,QAAQC,IAAI5N,MAEf4G,OAAM,SAAAlG,GACHyB,EAASyH,IAA2B,IACpCrC,MAAM7G,OEpEDmN,CAAavN,KAEpBwN,EAAa,SAACxN,GAChB,IAAIJ,EAAW6N,OAAO,kBAAmB,iBACxB,OAAb7N,GACAiC,EFkEgB,SAAC7B,EAAgBJ,GAAjB,OAAsC,SAACiC,GAC/DA,EAASyH,IAA2B,IACpC9J,EAAoBQ,EAAQJ,GACvB5C,MAAK,SAAA0C,GACF2N,QAAQC,IAAI5N,GACZmC,EAhDgB,SAAC7B,EAAgBJ,GAAjB,MAAuC,CAC/DU,KAAM,oBAAqBN,SAAQJ,YA+ClB8N,CAAa1N,EAAQJ,IAC9BiC,EAASyH,IAA2B,OAEvChD,OAAM,SAAAlG,GACHyB,EAASyH,IAA2B,IACpCrC,MAAM7G,OE5EGuN,CAAa3N,EAAQJ,KAItC,OAAO,qBAAKpC,UAAWG,KAAE6J,MAAlB,SACF6B,EACK,sBAAK7L,UAAWG,KAAE0O,MAAlB,UACE,sBAAK7O,UAAWG,KAAE2O,OAAlB,UACI,qBAAK9O,UAAWG,KAAE4O,KAAlB,sBACA,qBAAK/O,UAAWG,KAAE4O,KAAlB,oBACA,qBAAK/O,UAAWG,KAAE4O,KAAlB,mBACA,qBAAK/O,UAAWG,KAAE4O,KAAlB,qBACA,qBAAK/O,UAAWG,KAAE4O,KAAlB,SACI,wBAAQtJ,QAzBZ,WACZ,IAAIrD,EAAW6N,OAAO,cAAe,gBACpB,OAAb7N,GACAiC,EFiDa,SAAClC,EAAqBC,GAAtB,OAA2C,SAACiC,GACjEA,EAASyH,IAA2B,IACpC9J,EAAiBG,EAAaC,GACzB5C,MAAK,SAAA0C,GACFmC,EAASyH,IAA2B,IACpCzH,EAxBwC,CAACvB,KAAM,qBAAsBsN,QAwB/ClO,EAAIkO,aAE7BtH,OAAM,SAAAlG,GACHyB,EAASyH,IAA2B,IACpC+D,QAAQC,IAAIlN,GACZ6G,MAAM7G,OE3DGyN,CAAUxO,EAAKO,KAsBZ,sBAGR,qBAAKpC,UAAWG,KAAEiP,UAAlB,SACKpF,EAAM0B,KAAI,SAACrJ,GACR,OACI,sBAAKrC,UAAWG,KAAEmP,SAAlB,UACI,qBAAKtP,UAAWG,KAAE4O,KAAlB,SAAyB1M,EAAKE,WAC9B,qBAAKvC,UAAWG,KAAE4O,KAAlB,SAAyB1M,EAAKiO,SAC9B,qBAAKtQ,UAAWG,KAAE4O,KAAlB,SAAyB1M,EAAKkO,QAC9B,qBAAKvQ,UAAWG,KAAE4O,KAAlB,SAAyB1M,EAAKkN,UAC9B,sBAAKvP,UAAWG,KAAE4O,KAAlB,UACI,wBAAQtJ,QAAS,kBAAMkK,EAAWtN,EAAKN,MAAvC,oBACA,wBAAQ0D,QAAS,kBAAMuK,EAAW3N,EAAKN,MAAvC,yBAPyBM,EAAKN,aAepD,cAAC,EAAD,OC/CDiD,GAAO,CAChBqC,MAAO,SACPrB,aAAc,gBACdf,QAAS,WACT6E,QAAS,WACT/D,iBAAkB,oBAClBuC,YAAa,eACb2B,SAAU,YACVuG,aAAc,IACdzG,MAAO,SACPC,MAAO,SACPyG,UAAW,KAsCAC,GAnCI,WACf,OACI,cAAC,IAAD,UACI,gCACI,cAAC,GAAD,IACA,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOlB,KAAMxK,GAAKqC,MACXsJ,OAAQ,kBAAM,cAAC,EAAD,OACrB,cAAC,IAAD,CAAOnB,KAAMxK,GAAKgB,aACX2K,OAAQ,kBAAM,cAAC,GAAD,OACrB,cAAC,IAAD,CAAOnB,KAAMxK,GAAKC,QACX0L,OAAQ,kBAAM,cAAC,GAAD,OACrB,cAAC,IAAD,CAAOnB,KAAMxK,GAAK8E,QACX6G,OAAQ,kBAAM,cAAC,GAAD,OACrB,cAAC,IAAD,CAAOnB,KAAMxK,GAAKe,iBACX4K,OAAQ,kBAAM,cAAC,GAAD,OACrB,cAAC,IAAD,CAAOnB,KAAMxK,GAAKsD,YACXqI,OAAQ,kBAAM,cAAC,GAAD,OACrB,cAAC,IAAD,CAAOnB,KAAMxK,GAAK+E,MACX4G,OAAQ,kBAAM,cAAC,GAAD,OACrB,cAAC,IAAD,CAAOnB,KAAMxK,GAAKgF,MACX2G,OAAQ,kBAAM,cAAC,GAAD,OACrB,cAAC,IAAD,CAAOnB,KAAMxK,GAAKiF,SACX0G,OAAQ,kBAAM,cAAC,GAAD,OACrB,cAAC,IAAD,CAAUrP,KAAM0D,GAAKyL,UAAW1L,GAAIC,GAAKqC,QACzC,cAAC,IAAD,CAAU/F,KAAM0D,GAAKwL,aAAczL,GAAIC,GAAK8E,qB,kBC5ChE8G,GAAcC,aAAgB,CAC9B3J,SxBe2B,WAA0F,IAAzFrC,EAAwF,uDAA9DpC,EAAciL,EAAgD,uCACpH,OAAQA,EAAO5K,MAEX,IAAK,oCACD,OAAO,2BACA+B,GADP,IAEIlC,WAAY+K,EAAO/K,aAG3B,IAAK,+BACD,OAAO,2BACAkC,GADP,IAEInC,OAAQgL,EAAOhL,SAGvB,IAAK,8BACD,OAAO,2BACAmC,GADP,IAEIjC,MAAO8K,EAAO9K,QAItB,QACI,OAAOiC,IwBrCfC,KvBoBuB,WAA4D,IAA3DD,EAA0D,uDAAlD5B,EAAWyK,EAAuC,uCAClF,OAAQA,EAAO5K,MACX,IAAK,qCACD,OAAO,2BACA+B,GADP,IACc3B,SAAS,eAAKwK,EAAO7M,WAGvC,IAAK,sCACD,OAAO,2BACAgE,GADP,IACcxB,UAAWqK,EAAOjK,QAGpC,IAAK,iCACD,OAAO,2BACAoB,GADP,IACcjC,MAAO8K,EAAO9K,QAGhC,IAAK,2CACD,OAAO,2BACAiC,GADP,IACcvB,cAAeoK,EAAOjK,QAGxC,QACI,OAAOoB,IuB1CfkB,iBdJmC,WAA0I,IAAzIlB,EAAwI,uDAA9FpC,GAAciL,EAAgF,uCAC5K,OAAQA,EAAO5K,MACX,IAAK,yCACD,OAAO,2BAAI+B,GAAX,IAAkBmD,qBAAsB0F,EAAOhL,SACnD,IAAK,6BACD,OAAO,2BAAImC,GAAX,IAAkBjC,MAAO8K,EAAO9K,QACpC,IAAK,sCACD,OAAO,2BAAIiC,GAAX,IAAkBoD,oBAAqByF,EAAOzF,sBAClD,QACI,OAAOpD,IcJfkF,MPsBwB,WAAoF,IAAnFlF,EAAkF,uDAAxDpC,GAAciL,EAA0C,uCAC3G,OAAQA,EAAO5K,MAEX,IAAK,kBACD,OAAO,2BACA+B,GADP,IAEIkF,MAAO2D,EAAO3D,QAGtB,IAAK,mBACD,OAAO,2BACAlF,GADP,IAEInC,OAAQgL,EAAOhL,SAGvB,IAAK,kBACD,OAAO,2BACAmC,GADP,IAEIjC,MAAO8K,EAAO9K,QAGtB,IAAK,iBACD,OAAO,2BAEAiC,GAFP,IAGIpD,KAAMiM,EAAOjM,OAGrB,QACI,OAAOoD,IOlDfmF,MJHwB,WAA+F,IAA9FnF,EAA6F,uDAAnEpC,GAAciL,EAAqD,uCACtH,OAAQA,EAAO5K,MACX,IAAK,kBACD,OAAO,2BAAI+B,GAAX,IAAkBmF,MAAO0D,EAAO1D,QACpC,IAAK,oCACD,OAAO,2BAAInF,GAAX,IAAkBgH,mBAAoB6B,EAAOhL,SACjD,IAAK,qBACD,OAAO,2BAAImC,GAAX,IAAkBmF,MAAM,GAAD,oBAAMnF,EAAMmF,OAAZ,CAAmB0D,EAAO0C,YACrD,IAAK,oBACD,OAAO,2BACAvL,GADP,IAEImF,MAAOnF,EAAMmF,MAAMmD,QAAO,SAAA9K,GAAI,OAAIA,EAAKN,MAAQ2L,EAAOlL,YAE9D,IAAK,oBACD,OAAO,2BACAqC,GADP,IAEImF,MAAOnF,EAAMmF,MAAM0B,KAAI,SAAArJ,GACnB,GAAIA,EAAKN,MAAQ2L,EAAOlL,OAAQ,CAC5B,IAAI4N,EAAO,eAAO/N,GAElB,OADA+N,EAAQ7N,SAAWmL,EAAOtL,SACnBgO,EAEP,OAAO/N,OAIvB,QACI,OAAOwC,MIrBNiM,GAAQC,aAAYH,GAAaI,aAAgBC,OAK9DvI,OAAOoI,MAAQA,GCffI,IAASP,OACL,cAAC,IAAMQ,WAAP,UACI,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGRM,SAASC,eAAe,SAM5BhS,K,mBCnBAiS,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,OAAS,sBAAsB,UAAY,yBAAyB,SAAW,wBAAwB,KAAO,sB,mBCA1LD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,MAAQ,qBAAqB,OAAS,sBAAsB,MAAQ,qBAAqB,QAAU,yB,mBCA1JD,EAAOC,QAAU,CAAC,UAAY,gCAAgC,MAAQ,4BAA4B,OAAS,6BAA6B,MAAQ,4BAA4B,OAAS,+B,mBCArLD,EAAOC,QAAU,CAAC,UAAY,oCAAoC,YAAc,sCAAsC,MAAQ,gCAAgC,MAAQ,gCAAgC,OAAS,mC,mBCA/MD,EAAOC,QAAU,CAAC,IAAM,0BAA0B,QAAU,8BAA8B,SAAW,+BAA+B,IAAM,4B,mBCA1ID,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,mBCA1HD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,QAAU,2B,mBCAnED,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,kBCAjED,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,OAAS,sBAAsB,UAAY,yBAAyB,SAAW,wBAAwB,KAAO,oBAAoB,IAAM,mBAAmB,MAAQ,qBAAqB,aAAe,4BAA4B,KAAO,oBAAoB,OAAS,sBAAsB,WAAa,0BAA0B,KAAO,oBAAoB,OAAS,sBAAsB,KAAO,sB,mBCApbD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,mBCA/DD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,mBCA7ED,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,OAAS,2B,mBCAzDD,EAAOC,QAAU,CAAC,gBAAkB,sC,mBCApCD,EAAOC,QAAU,CAAC,MAAQ,4B","file":"static/js/main.e2e8de64.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton1.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton1: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.btn} ${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton1;\r\n","import axios from \"axios\";\r\nimport {AuthDataType} from \"../components/login/Login\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    /*baseURL: 'http://localhost:7542/2.0/',*/\r\n    withCredentials: true\r\n})\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.post('/auth/me')\r\n    },\r\n    signIn(payload: AuthDataType) {\r\n        return instance.post('/auth/login', payload)\r\n    },\r\n    signOut() {\r\n        return instance.delete('/auth/me')\r\n    }\r\n}\r\nexport const ApiRegister = {\r\n    setRegister(email: string, password: string) {\r\n        return instance.post('auth/register', {email, password}).then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n\r\n}\r\nexport const passwordRecoveryApi = {\r\n    passwordRecovery(email: string, domain: string) {\r\n        return axios.post('https://neko-back.herokuapp.com/2.0/auth/forgot',\r\n            {\r\n                email: email,\r\n                from: \"Test-front-admin <mikutishvili.koba@gmail.com>\",\r\n                message: `<div>Password recovery. Click this <a href='http://${domain}/#/newPassword/$token$'>link</a></div>`\r\n            },\r\n            {withCredentials: true}\r\n        )\r\n    }\r\n}\r\nexport type TypeCards = {\r\n    cardsCount: number\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    name: string\r\n    path: string\r\n    private: boolean\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    user_name: string\r\n    _id: string\r\n}\r\nexport type TypeResponsePacks = {\r\n    cardPacks: TypeCards[]\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\ntype TypeResponseAddPacks = {\r\n    newCardsPack: TypeCards\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\nexport const packsApi = {\r\n    getPacks(page: number) {\r\n        return instance.get<TypeResponsePacks>(`cards/pack?pageCount=100&page=${page}`)\r\n            .then(response => response.data)\r\n    },\r\n    setPacks(name: string) {\r\n        return instance.post<TypeResponseAddPacks>('cards/pack', {\r\n            cardsPack: {\r\n                name\r\n            }\r\n        })\r\n            .then(response => response.data)\r\n    },\r\n    deletePacks(id: string | undefined) {\r\n        return instance.delete<TypeResponseAddPacks>(`cards/pack?id=${id}`)\r\n            .then(response => response.data)\r\n    },\r\n    updatePacks(id: string | undefined, name: string) {\r\n        return instance.put<TypeResponseAddPacks>(`cards/pack`, {\r\n            cardsPack: {\r\n                _id: id,\r\n                name\r\n            }\r\n        })\r\n            .then(response => response.data)\r\n    },\r\n\r\n}\r\n\r\nexport type CardType = {\r\n    answer: string\r\n    cardsPack_id: string\r\n    comments: string\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    question: string\r\n    questionImg: string\r\n    questionVideo: string\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    __v: number\r\n    _id: string\r\n}\r\ntype GetCardsResponseType = {\r\n    cards: Array<CardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    packUserId: string\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\ntype AddCardResponseType = {\r\n    newCard: CardType\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\ntype UpdateCardResponseType = {\r\n    updatedCard: CardType\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\n\r\nexport const cardsApi = {\r\n    getCards(cardPackId: string) {\r\n        return instance.get<GetCardsResponseType>(`cards/card?pageCount=10&cardsPack_id=${cardPackId}`)\r\n            .then(res => res.data)\r\n    },\r\n    addCard(cardsPackId: string, newTitle: string) {\r\n        return instance.post<AddCardResponseType>(`cards/card`, {card: {cardsPack_id: cardsPackId, question: newTitle}})\r\n            .then(res => res.data)\r\n    },\r\n    deleteCard(cardId: string) {\r\n        return instance.delete(`cards/card?id=${cardId}`)\r\n    },\r\n    updateCard(cardId: string, newTitle: string) {\r\n        return instance.put<UpdateCardResponseType>(\"cards/card\", {card: {_id: cardId, question: newTitle}})\r\n            .then(res => res.data)\r\n    }\r\n}","import {Dispatch} from \"react\";\r\nimport {ApiRegister, authAPI} from \"../../api/auth-api\";\r\n\r\nlet initialState: ReducerStateType = {\r\n    status: \"free\",\r\n    isRegister: false,\r\n    error: \"\",\r\n}\r\nexport const setStatusAC = (status: TypeStatus) => {\r\n    return {\r\n        type: '/register_reducer/SET_STATUS',\r\n        status\r\n    } as const\r\n}\r\nexport const setIsRegisterAC = (isRegister: boolean) => {\r\n    return {\r\n        type: '/register_reducer/SET_IS_REGISTER',\r\n        isRegister\r\n    } as const\r\n}\r\nexport const setErrorAC = (error: string) => {\r\n    return {\r\n        type: '/register_reducer/SET_ERROR',\r\n        error\r\n    } as const\r\n}\r\nexport const ReducerRegister = (state: ReducerStateType = initialState, action: ReducerActionType): ReducerStateType => {\r\n    switch (action.type) {\r\n\r\n        case \"/register_reducer/SET_IS_REGISTER\": {\r\n            return {\r\n                ...state,\r\n                isRegister: action.isRegister\r\n            }\r\n        }\r\n        case \"/register_reducer/SET_STATUS\": {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case \"/register_reducer/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const registerTC = (email: string, password: string) => async (dispatch: Dispatch<ReducerActionType>) => {\r\n    try {\r\n        dispatch(setStatusAC(\"loading\"))\r\n        await ApiRegister.setRegister(email, password)\r\n        dispatch(setStatusAC(\"success\"))\r\n        dispatch(setIsRegisterAC(true))\r\n    } catch (e) {\r\n        const error: TypeError = e.response.data;\r\n        dispatch(setStatusAC(\"error\"))\r\n        dispatch(setErrorAC(error.error))\r\n\r\n    }\r\n\r\n\r\n}\r\nexport const registrIsAuthTC = () => async (dispatch: Dispatch<ReducerActionType>) => {\r\n    let result = await authAPI.authMe()\r\n    result.data && dispatch(setIsRegisterAC(true))\r\n\r\n\r\n}\r\nexport type TypeStatus = 'free' | 'loading' | 'success' | 'error'\r\nexport type ReducerStateType = {\r\n    status: TypeStatus\r\n    isRegister: boolean\r\n    error: string\r\n}\r\ntype TypeError = {\r\n    emailRegExp: {}\r\n    error: string\r\n    in: string\r\n    isEmailValid: boolean\r\n    isPassValid: boolean\r\n    passwordRegExp: string\r\n}\r\n\r\n\r\nexport type TypesetIsRegister = ReturnType<typeof setIsRegisterAC>\r\n\r\nexport type ReducerActionType =\r\n    | ReturnType<typeof setStatusAC>\r\n    | TypesetIsRegister\r\n    | ReturnType<typeof setErrorAC>","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {authAPI} from \"../../api/auth-api\";\r\nimport {AuthDataType} from \"./Login\";\r\nimport {setIsRegisterAC, TypesetIsRegister} from \"../registration/registrationReducer\";\r\n\r\nexport type UserDataType = {\r\n    email: string | null\r\n    name: string | null\r\n    avatar: \"\"\r\n    publicCardPacksCount: number | null\r\n}\r\n\r\nexport type InitStateType = {\r\n    userData: UserDataType\r\n    isLoading: boolean\r\n    error: null | string\r\n    isAuthSuccess: boolean\r\n}\r\n\r\nlet initState: InitStateType = {\r\n    userData: {\r\n        email: null as string | null,\r\n        name: null as string | null,\r\n        avatar: \"\",\r\n        publicCardPacksCount: null as number | null\r\n    },\r\n    isLoading: false,\r\n    error: null as string | null,\r\n    isAuthSuccess: false\r\n}\r\n\r\nexport const authReducer = (state = initState, action: ActionsType): InitStateType => {\r\n    switch (action.type) {\r\n        case \"friday-project/login/SET_USER_DATA\":\r\n            return {\r\n                ...state, userData: {...action.payload}\r\n            }\r\n\r\n        case \"friday-project/login/SET_IS_LOADING\":\r\n            return {\r\n                ...state, isLoading: action.value\r\n            }\r\n\r\n        case \"friday-project/login/SET_ERROR\":\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n\r\n        case \"friday-project/login/SET_IS_AUTH_SUCCESS\":\r\n            return {\r\n                ...state, isAuthSuccess: action.value\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Actions\r\nconst setUserData = (payload: UserDataType) => ({type: 'friday-project/login/SET_USER_DATA', payload} as const)\r\nconst setIsLoading = (value: boolean) => ({type: 'friday-project/login/SET_IS_LOADING', value} as const)\r\nexport const setError = (error: string) => ({type: 'friday-project/login/SET_ERROR', error} as const)\r\nconst setIsAuthSuccess = (value: boolean) => ({type: 'friday-project/login/SET_IS_AUTH_SUCCESS', value} as const)\r\n\r\n// Thunks\r\ntype ThunkType = ThunkAction<void, AppRootStateType, unknown, ActionsType>\r\ntype ThunkDispatchType = ThunkDispatch<AppRootStateType, unknown, ActionsType|TypesetIsRegister>\r\n\r\n\r\n\r\n\r\nexport const signIn = (payload: AuthDataType): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n        let res = await authAPI.signIn(payload)\r\n        dispatch(setIsLoading(false))\r\n        dispatch(setIsAuthSuccess(true))\r\n        dispatch(setUserData(res.data))\r\n        dispatch(setError(''))\r\n    } catch (e) {\r\n        let error = e.response.data.error\r\n        dispatch(setIsLoading(false))\r\n        dispatch(setError(error))\r\n    }\r\n}\r\n\r\nexport const signOut = (): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n         await authAPI.signOut()\r\n        dispatch(setIsLoading(false))\r\n        dispatch(setIsAuthSuccess(false))\r\n        dispatch(setIsRegisterAC(false))\r\n\r\n    } catch (e) {\r\n        let error = e.response.data.error\r\n        dispatch(setIsLoading(false))\r\n        dispatch(setError(error))\r\n    }\r\n}\r\n\r\nexport const authMe = (): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    try {\r\n        let res = await authAPI.authMe()\r\n        dispatch(setIsAuthSuccess(true))\r\n        dispatch(setUserData(res.data))\r\n    } catch (e) {\r\n        let error = e.response.data.error\r\n        dispatch(setIsLoading(false))\r\n        dispatch(setError(error))\r\n    }\r\n}\r\n\r\ntype SetUserDataActionType = ReturnType<typeof setUserData>\r\ntype SetIsLoadingActionType = ReturnType<typeof setIsLoading>\r\ntype SetErrorActionType = ReturnType<typeof setError>\r\ntype SetIsAuthSuccess = ReturnType<typeof setIsAuthSuccess>\r\n\r\ntype ActionsType = SetUserDataActionType | SetIsLoadingActionType | SetErrorActionType | SetIsAuthSuccess","export default __webpack_public_path__ + \"static/media/tms-loading.45dec5c5.gif\";","import React from 'react';\r\nimport preloader from \"../images/tms-loading.gif\";\r\nimport s from './preloader.module.css'\r\n\r\nconst Preloader = ()=>{\r\n    return<div className={s.preloader}>\r\n        <img src={preloader} alt={'Preloader'}/>\r\n    </div>\r\n}\r\nexport default  Preloader;","import React, {ChangeEvent, useState} from 'react'\r\nimport style from './Login.module.css'\r\nimport SuperButton1 from \"../superComponents/c2-SuperButton/SuperButton1\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\nimport {setError, signIn} from \"./auth-reducer\";\r\nimport Preloader from \"../../common/preloader\";\r\n\r\nexport type AuthDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport const Login = () => {\r\n    const [formData, setFormData] = useState<AuthDataType>({email: '', password: '', rememberMe: false})\r\n    const dispatch = useDispatch()\r\n\r\n    const changeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const target = e.currentTarget\r\n        const value = target.type === 'checkbox' ? target.checked : target.value\r\n        setFormData({...formData, [target.name]: value})\r\n    }\r\n\r\n    const clickHandler = (e: React.MouseEvent<HTMLElement>) => {\r\n        e.preventDefault()\r\n        let validator = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n        if (!validator.test(formData.email)) {\r\n            dispatch(setError('Please, enter correct email'))\r\n        } else dispatch(signIn(formData))\r\n    }\r\n\r\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.auth.isLoading)\r\n    const error = useSelector<AppRootStateType, null | string>(state => state.auth.error)\r\n    const isAuthSuccess = useSelector<AppRootStateType, boolean>(state => state.auth.isAuthSuccess)\r\n\r\n    return (\r\n        <>\r\n            {isAuthSuccess\r\n                ? <Redirect to={PATH.profile}/>\r\n                : <form name=\"login\" className={style.container}>\r\n                    {isLoading\r\n                        ? <div>\r\n                            <div className={style.loading}>Loading...</div>\r\n                            <Preloader/>\r\n                        </div>\r\n                        : <>\r\n                            <h3>Sign in</h3>\r\n                            <input name='email'\r\n                                   type=\"text\"\r\n                                   placeholder='email'\r\n                                   className={style.input}\r\n                                   onChange={changeHandler}\r\n                            />\r\n                            <input name='password'\r\n                                   type=\"password\"\r\n                                   placeholder='password'\r\n                                   className={style.input}\r\n                                   onChange={changeHandler}\r\n                            />\r\n                            {error && <span className={style.error}>{error}</span>}\r\n                            <div>\r\n                                <input name='rememberMe'\r\n                                       type=\"checkbox\"\r\n                                       className={style.checkbox}\r\n                                       onChange={changeHandler}\r\n                                />\r\n                                <span>Remember me</span>\r\n                            </div>\r\n                            <SuperButton1 onClick={clickHandler}\r\n                                          className={style.button}\r\n                                          disabled={isLoading}\r\n                            >\r\n                                Sign in\r\n                            </SuperButton1>\r\n                            <NavLink to={PATH.passwordRecovery}>Forgot Password?</NavLink>\r\n                            <NavLink to={PATH.registration}>Sign up</NavLink>\r\n                        </>\r\n                    }\r\n                </form>\r\n            }\r\n        </>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? s.errorInput: ''} ${className ? className : s.superInput}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <div className={finalSpanClassName}>{error}</div>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {useEffect, useState} from 'react';\r\nimport s from './Registration.module.css'\r\nimport SuperInputText from \"../superComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../superComponents/c2-SuperButton/SuperButton1\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {registerTC, registrIsAuthTC, setErrorAC, TypeStatus} from \"./registrationReducer\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\nimport Preloader from \"../../common/preloader\";\r\nimport style from \"../login/Login.module.css\";\r\n\r\nexport const Registration = () => {\r\n    const [emailValue, setEmailValue] = useState<string>('')\r\n    const [passwordOneValue, setPasswordOneValue] = useState<string>('')\r\n    const [passwordTwoValue, setPasswordTwoValue] = useState<string>('')\r\n    const dispatch = useDispatch()\r\n    const status = useSelector<AppRootStateType, TypeStatus>(state => state.register.status)\r\n    const isRegister = useSelector<AppRootStateType, boolean>(state => state.register.isRegister)\r\n    const error = useSelector<AppRootStateType, string>(state => state.register.error)\r\n    useEffect(()=>{\r\n        dispatch(registrIsAuthTC())\r\n    },[dispatch])\r\n    let validator = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n    const onChangeTextEmail = (value: string) => {\r\n        setEmailValue(value)\r\n    }\r\n    const onChangePasswordOne = (value: string) => {\r\n        setPasswordOneValue(value)\r\n    }\r\n    const onChangePasswordTwo = (value: string) => {\r\n        setPasswordTwoValue(value)\r\n    }\r\n\r\n    const sendForm = () => {\r\n        if (passwordOneValue !== passwordTwoValue) {\r\n            dispatch(setErrorAC('Password confirmation does not match'))\r\n            return\r\n        }else if(!validator.test(emailValue)){\r\n            dispatch(setErrorAC('Please, enter correct email'))\r\n            return\r\n        }\r\n\r\n\r\n\r\n        dispatch(registerTC(emailValue, passwordOneValue))\r\n    }\r\n\r\n    return <>\r\n        {isRegister && <Redirect to={PATH.login}/>}\r\n        <div className={s.container}>\r\n            {status === \"loading\" ? <Preloader/> :\r\n                <div>\r\n                    <h3>Registration</h3>\r\n                    <form className={s.form}>\r\n                        <div>\r\n\r\n                            <SuperInputText  className={style.input}   placeholder='email' onChangeText={onChangeTextEmail}\r\n                                            value={emailValue}/>\r\n                        </div>\r\n                        <div>\r\n\r\n                            <SuperInputText type={'password'}    placeholder='password'  className={style.input} onChangeText={onChangePasswordOne}\r\n                                            value={passwordOneValue}/>\r\n                        </div>\r\n                        <div>\r\n                            <SuperInputText type={'password'}   placeholder='password'  className={style.input} onChangeText={onChangePasswordTwo}\r\n                                            value={passwordTwoValue}/>\r\n                        </div>\r\n\r\n                        <div className={s.button}>\r\n                            <SuperButton onClick={sendForm}>Register</SuperButton>\r\n                        </div>\r\n\r\n                        <div className={s.error}>\r\n                            {error}\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>}\r\n          <div className={s.signIn}>\r\n              <NavLink to={PATH.login}>Sign in</NavLink>\r\n          </div>\r\n\r\n        </div>\r\n    </>\r\n\r\n\r\n}","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {authMe, signOut, UserDataType} from \"../login/auth-reducer\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\nimport SuperButton1 from \"../superComponents/c2-SuperButton/SuperButton1\";\r\nimport style from './Profile.module.css'\r\nimport Preloader from \"../../common/preloader\";\r\n\r\nexport const Profile = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const clickHandler = () => {\r\n        dispatch(signOut())\r\n    }\r\n\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.auth.isAuthSuccess)\r\n\r\n    const userData = useSelector<AppRootStateType, UserDataType>(state => state.auth.userData)\r\n\r\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.auth.isLoading)\r\n\r\n    useEffect(() => {\r\n        if (!isAuth) {\r\n            dispatch(authMe())\r\n        }\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            {isAuth\r\n                ? <div className={style.container}>\r\n                    {isLoading\r\n                        ? <div>\r\n                            <div className={style.loading}>Loading...</div>\r\n                            <Preloader/>\r\n                        </div>\r\n                        : <>\r\n                            <p><img src={userData.avatar} /></p>\r\n                            <p>Name: {userData.name}</p>\r\n                            <p>Email: {userData.email}</p>\r\n                            <p>Card packs: {userData.publicCardPacksCount}</p>\r\n                            <SuperButton1 onClick={clickHandler}>Sign out</SuperButton1>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                : <Redirect to={PATH.login}/>\r\n            }\r\n        </>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/kot.da7a033b.jpg\";","import React from 'react';\r\nimport kot from './../../images/kot.jpg'\r\nimport s from './Page404.module.css'\r\n\r\nexport const Page404 = () => {\r\n\r\n    const photo404 = {\r\n        backgroundImage: `url(${kot})`\r\n    }\r\n\r\n    return (\r\n        <div className={s.mainBlock}>\r\n            <h2>We are so sorry, but page not found</h2>\r\n            <div style={photo404} className={s.image}></div>\r\n        </div>\r\n    )\r\n}","import {Dispatch} from \"redux\"\r\nimport {passwordRecoveryApi} from \"../../api/auth-api\";\r\n\r\nconst initialState: PasswordRecoveryReducerStateType = {\r\n    serverResponseStatus: false,\r\n    error: \"\",\r\n    serverRequestStatus: 'undefined'\r\n}\r\n\r\nexport const passwordRecoveryReducer = (state: PasswordRecoveryReducerStateType = initialState, action: PasswordRecoveryReducerActionType): PasswordRecoveryReducerStateType => {\r\n    switch (action.type) {\r\n        case \"passwordRecovery/CHANGE-REQUEST-STATUS\":\r\n            return {...state, serverResponseStatus: action.status}\r\n        case \"passwordRecovery/SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"passwordRecovery/SET-REQUEST-STATUS\":\r\n            return {...state, serverRequestStatus: action.serverRequestStatus}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const changeRequestStatusAC = (status: boolean) => {\r\n    return {type: 'passwordRecovery/CHANGE-REQUEST-STATUS', status} as const\r\n}\r\nexport const setErrorAC = (error: string) => {\r\n    return {type: 'passwordRecovery/SET-ERROR', error} as const\r\n}\r\nexport const setRequestStatusAC = (serverRequestStatus: ServerRequestStatusType) => {\r\n    return {type: 'passwordRecovery/SET-REQUEST-STATUS', serverRequestStatus} as const\r\n}\r\n\r\n// Thunk\r\nexport const passwordRecoveryTC = (email: string, currentPageDomain: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setRequestStatusAC(\"active\"))\r\n        passwordRecoveryApi.passwordRecovery(email, currentPageDomain)\r\n            .then(res => {\r\n                if (res.data.success === true) {\r\n                    dispatch(changeRequestStatusAC(true))\r\n                    dispatch(setRequestStatusAC(\"completed\"))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(setErrorAC(error.response.data.error))\r\n                dispatch(setRequestStatusAC(\"completed\"))\r\n            })\r\n    }\r\n}\r\n\r\nexport type PasswordRecoveryReducerStateType = {\r\n    serverResponseStatus: boolean\r\n    error: string\r\n    serverRequestStatus: ServerRequestStatusType\r\n}\r\n\r\nexport type ServerRequestStatusType = 'active' | 'completed' | 'undefined'\r\n\r\ntype PasswordRecoveryReducerActionType =\r\n    | ReturnType<typeof changeRequestStatusAC>\r\n    | ReturnType<typeof setErrorAC>\r\n    | ReturnType<typeof setRequestStatusAC>","import React, {ChangeEvent, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport s from './PasswordRecovery.module.css'\r\nimport {passwordRecoveryTC, ServerRequestStatusType, setErrorAC} from \"./passwordRecoveryReducer\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../App\";\r\nimport Preloader from \"../../common/preloader\";\r\nimport SuperButton1 from \"../superComponents/c2-SuperButton/SuperButton1\";\r\n\r\n\r\nexport const PasswordRecovery = () => {\r\n\r\n    const [inputValue, setInputValue] = useState<string>(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n    const error = useSelector<AppRootStateType, string>(state => state.passwordRecovery.error)\r\n    const serverResponseStatus = useSelector<AppRootStateType, boolean>(state => state.passwordRecovery.serverResponseStatus)\r\n    const serverRequestStatus = useSelector<AppRootStateType, ServerRequestStatusType>(state => state.passwordRecovery.serverRequestStatus)\r\n\r\n    const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setInputValue(e.currentTarget.value)\r\n    }\r\n\r\n    const OnButtonClick = () => {\r\n        let validator = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n        if (validator.test(inputValue) == false) {\r\n            dispatch(setErrorAC('Please, enter correct email'))\r\n        } else {\r\n            const currentPageDomain = window.location.host\r\n            dispatch(passwordRecoveryTC(inputValue, currentPageDomain))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {serverResponseStatus && <Redirect to={PATH.newPassword}/>}\r\n            <div className={s.pageBlock}>\r\n                {serverRequestStatus === 'active'\r\n                    ? <Preloader/>\r\n                    : <div className={s.secondBlock}>\r\n                        <h3>Password recovery</h3>\r\n                        <input type=\"text\"\r\n                               placeholder={'your email'}\r\n                               onChange={onInputChange}\r\n                               value={inputValue}\r\n                               className={s.input}\r\n                        />\r\n                        <div className={s.error}>{error}</div>\r\n                        <SuperButton1 className={s.button}\r\n                                onClick={OnButtonClick}>send\r\n                        </SuperButton1>\r\n                        <NavLink to={PATH.registration}>Sign up</NavLink>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const NewPassword = () => {\r\n    return (\r\n        <div>\r\n            new password\r\n        </div>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`; //\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from 'react';\r\nimport SuperInputText from \"../superComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../superComponents/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../superComponents/c3-SuperCheckbox/SuperCheckbox\";\r\nimport s from \"./TestPage.module.css\"\r\nimport Preloader from \"../../common/preloader\";\r\n\r\nexport const TestPage = () => {\r\n\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return(\r\n        <div>\r\n            <hr/>\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    //className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >delete</SuperButton>\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >some text</SuperCheckbox>\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChange={testOnChange}\r\n                />\r\n                <Preloader/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from \"./Navigation.module.css\"\r\nimport {PATH} from \"../../App\";\r\n\r\nexport const Navigation = () => {\r\n    return (\r\n        <div className={s.navigationBlock}>\r\n            <NavLink to={PATH.login}>login</NavLink>\r\n            <NavLink to={PATH.registration}>registration</NavLink>\r\n            <NavLink to={PATH.profile}>profile</NavLink>\r\n            <NavLink to={PATH.page404}>page 404</NavLink>\r\n            <NavLink to={PATH.passwordRecovery}>password recovery</NavLink>\r\n            <NavLink to={PATH.newPassword}>new password</NavLink>\r\n            <NavLink to={PATH.packs}>Packs</NavLink>\r\n            <NavLink to={PATH.cards}>Cards</NavLink>\r\n            <NavLink to={PATH.testPage}>test page</NavLink>\r\n        </div>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {packsApi, TypeResponsePacks} from \"../../api/auth-api\";\r\nimport {TypeStatus} from \"../registration/registrationReducer\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\n\r\nconst initialState: TypeInitialState = {\r\n    status:'free',\r\n    packs: null,\r\n    error:'',\r\n    page:1\r\n\r\n}\r\nexport const setPageAC = (page: number) => {\r\n    return {\r\n        type: 'packs/SET_PAGE',\r\n        page\r\n    } as const\r\n}\r\nexport const setStatusPacksAC = (status: TypeStatus) => {\r\n    return {\r\n        type: 'packs/SET_STATUS',\r\n        status\r\n    } as const\r\n}\r\nconst getPacksAC = (packs: TypeResponsePacks) => {\r\n    return {\r\n        type: 'packs/GET_PACKS',\r\n        packs\r\n    } as const\r\n}\r\nexport const setErrorPacksAC = (error: string) => {\r\n    return {\r\n        type: 'packs/SET_ERROR',\r\n        error\r\n    } as const\r\n}\r\nexport const packsReducer = (state: TypeInitialState = initialState, action: TypeActions): TypeInitialState => {\r\n    switch (action.type) {\r\n\r\n        case \"packs/GET_PACKS\": {\r\n            return {\r\n                ...state,\r\n                packs: action.packs\r\n            }\r\n        }\r\n        case \"packs/SET_STATUS\": {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case \"packs/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        case \"packs/SET_PAGE\": {\r\n            return {\r\n\r\n                ...state,\r\n                page: action.page\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const getPackTC = () => async (dispatch: Dispatch<TypeThunkDispatch>,getState:() =>AppRootStateType) => {\r\n    try{\r\n        dispatch(setStatusPacksAC('loading'))\r\n        let result = await packsApi.getPacks(getState().packs.page)\r\n        dispatch(getPacksAC(result))\r\n        dispatch(setErrorPacksAC(\"\"))\r\n        dispatch(setStatusPacksAC('success'))\r\n    }catch (e) {\r\n        const error: TypeError = e.response.data;\r\n            dispatch(setErrorPacksAC(error.error))\r\n            dispatch(setStatusPacksAC('success'))\r\n\r\n    }\r\n}\r\nexport const setPackTC = (name:string) => async (dispatch: Dispatch<TypeThunkDispatch>,getState:() =>AppRootStateType) => {\r\n    try{\r\n        dispatch(setStatusPacksAC('loading'))\r\n        await packsApi.setPacks(name)\r\n        let result =  await packsApi.getPacks(getState().packs.page)\r\n        dispatch(getPacksAC(result))\r\n        dispatch(setErrorPacksAC(\"\"))\r\n        dispatch(setStatusPacksAC('success'))\r\n    }catch (e) {\r\n        const error: TypeError = e.response.data;\r\n        dispatch(setErrorPacksAC(error.error))\r\n        dispatch(setStatusPacksAC('success'))\r\n\r\n    }\r\n}\r\nexport const deletePackTC = (id:string|undefined,) => async (dispatch: Dispatch<TypeThunkDispatch>,getState:() =>AppRootStateType) => {\r\n    try{\r\n        dispatch(setStatusPacksAC('loading'))\r\n        await packsApi.deletePacks(id)\r\n        let result =  await packsApi.getPacks(getState().packs.page)\r\n        dispatch(getPacksAC(result))\r\n        dispatch(setErrorPacksAC(\"\"))\r\n        dispatch(setStatusPacksAC('success'))\r\n\r\n\r\n    }catch (e) {\r\n        const error: TypeError = e.response.data;\r\n        dispatch(setErrorPacksAC(error.error))\r\n        dispatch(setStatusPacksAC('success'))\r\n\r\n    }\r\n}\r\nexport const updatePackTC = (id:string|undefined,name:string) => async (dispatch: Dispatch<TypeThunkDispatch>,getState:() =>AppRootStateType) => {\r\n    try{\r\n        dispatch(setStatusPacksAC('loading'))\r\n        await packsApi.updatePacks(id,name)\r\n        let result =  await packsApi.getPacks(getState().packs.page)\r\n        dispatch(getPacksAC(result))\r\n        dispatch(setErrorPacksAC(\"\"))\r\n        dispatch(setStatusPacksAC('success'))\r\n\r\n\r\n    }catch (e) {\r\n        const error: TypeError = e.response.data;\r\n        dispatch(setErrorPacksAC(error.error))\r\n        dispatch(setStatusPacksAC('success'))\r\n\r\n    }\r\n}\r\n\r\ntype TypeInitialState = {\r\n    status:TypeStatus\r\n    packs: TypeResponsePacks | null;\r\n    error:string,\r\n    page:number\r\n}\r\ntype TypeError = {\r\n    error: string\r\n    in:string\r\n}\r\ntype TypeThunkDispatch = TypeActions;\r\ntype TypeGetPacksAC = ReturnType<typeof getPacksAC>\r\ntype TypeActions = TypeGetPacksAC |ReturnType<typeof setStatusPacksAC>\r\n    |ReturnType<typeof setErrorPacksAC>\r\n    |ReturnType<typeof setPageAC>;","import React from \"react\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport s from './SuperRange.module.css'\r\ntype SuperDoubleRangePropsType = {\r\n    setValue2:(value:number)=>void\r\n    setValue1:(value:number)=>void\r\n    max:number\r\n    min:number\r\n\r\n}\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n    {\r\n        setValue2,min,max,setValue1\r\n\r\n    }\r\n) => {\r\n\r\n    const onChange = (event: React.ChangeEvent<{}>, value:any) => {\r\n        // console.log(event)\r\n        setValue1(value[0])\r\n        setValue2(value[1])\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.range}>\r\n            <Slider\r\n                value={[min,max]}\r\n                onChange={onChange}\r\n                valueLabelDisplay='auto'\r\n                aria-labelledby=\"range-slider\"\r\n                max={10}\r\n                min={0}\r\n\r\n\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuperDoubleRange;\r\n","import React, {MouseEvent} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport s from \"./packs.module.css\";\r\nimport {getPackTC, setPageAC} from \"./paskReducer\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\n\r\n\r\nconst Pagination = ()=>{\r\n    const dispatch = useDispatch()\r\n    const page = useSelector<AppRootStateType,number>(state => state.packs.page)\r\n    const clickPage = (event:MouseEvent<HTMLButtonElement>)=>{\r\n        dispatch(setPageAC(+event.currentTarget.innerHTML))\r\n        dispatch(getPackTC())\r\n    }\r\nconst arr = [];\r\n    for (let i = 1; i <= 10; i++) {\r\n        arr.push(i)\r\n    }\r\n    return (\r\n        <div>\r\n            <span style={{fontWeight:'bold'}}>Pages:</span>   {arr.map((pages,id)=>{\r\n               return <span key={id}  className={`${page-1===id ? s.active:\"\"} ${s.page}` } onClick={clickPage }  >{pages}</span>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import {cardsApi, CardType} from \"../../api/auth-api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type InitialStateType = {\r\n    cards: Array<CardType>\r\n    serverAnswerStatus: boolean\r\n}\r\nconst initialState: InitialStateType = {\r\n    cards: [],\r\n    serverAnswerStatus: true\r\n}\r\n\r\nexport const cardsReducer = (state: InitialStateType = initialState, action: cardsReducerActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cards/SET_CARDS\":\r\n            return {...state, cards: action.cards}\r\n        case \"cards/CHANGE-SERVER-ANSWER STATUS\":\r\n            return {...state, serverAnswerStatus: action.status}\r\n        case \"cards/ADD_NEW_CARD\":\r\n            return {...state, cards: [...state.cards, action.newCard]}\r\n        case \"cards/DELETE_CARD\":\r\n            return {\r\n                ...state,\r\n                cards: state.cards.filter(card => card._id !== action.cardId)\r\n            }\r\n        case \"cards/UPDATE_CARD\":\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map(card => {\r\n                    if (card._id === action.cardId) {\r\n                        let newCard = {...card}\r\n                        newCard.question = action.newTitle\r\n                        return newCard\r\n                    } else {\r\n                        return card\r\n                    }\r\n                })\r\n            }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const setCardsAC = (cards: CardType[]) => ({type: \"cards/SET_CARDS\", cards} as const)\r\nexport const changeServerAnswerStatusAC = (status: boolean) => ({\r\n    type: \"cards/CHANGE-SERVER-ANSWER STATUS\", status\r\n} as const)\r\nexport const addNewCardAC = (newCard: CardType) => ({type: \"cards/ADD_NEW_CARD\", newCard} as const)\r\nexport const deleteCardAC = (cardId: string) => ({type: \"cards/DELETE_CARD\", cardId} as const)\r\nexport const updateCardAC = (cardId: string, newTitle: string) => ({\r\n    type: \"cards/UPDATE_CARD\", cardId, newTitle\r\n} as const)\r\n\r\n/*Thunks*/\r\nexport const getCardsTC = (packsId: string) => (dispatch: Dispatch<cardsReducerActionType>) => {\r\n    dispatch(changeServerAnswerStatusAC(false))\r\n    cardsApi.getCards(packsId)\r\n        .then(res => {\r\n            dispatch(setCardsAC(res.cards))\r\n            dispatch(changeServerAnswerStatusAC(true))\r\n        })\r\n        .catch(error => {\r\n            dispatch(changeServerAnswerStatusAC(true))\r\n            alert(error)\r\n        })\r\n}\r\nexport const addCardTC = (cardsPackId: string, newTitle: string) => (dispatch: Dispatch<cardsReducerActionType>) => {\r\n    dispatch(changeServerAnswerStatusAC(false))\r\n    cardsApi.addCard(cardsPackId, newTitle)\r\n        .then(res => {\r\n            dispatch(changeServerAnswerStatusAC(true))\r\n            dispatch(addNewCardAC(res.newCard))\r\n        })\r\n        .catch(error => {\r\n            dispatch(changeServerAnswerStatusAC(true))\r\n            console.log(error)\r\n            alert(error)\r\n        })\r\n}\r\nexport const deleteCardTC = (cardId: string) => (dispatch: Dispatch<cardsReducerActionType>) => {\r\n    dispatch(changeServerAnswerStatusAC(false))\r\n    cardsApi.deleteCard(cardId)\r\n        .then(res => {\r\n            dispatch(deleteCardAC(cardId))\r\n            dispatch(changeServerAnswerStatusAC(true))\r\n            console.log(res)\r\n        })\r\n        .catch(error => {\r\n            dispatch(changeServerAnswerStatusAC(true))\r\n            alert(error)\r\n        })\r\n}\r\nexport const updateCardTC = (cardId: string, newTitle: string) => (dispatch: Dispatch<cardsReducerActionType>) => {\r\n    dispatch(changeServerAnswerStatusAC(false))\r\n    cardsApi.updateCard(cardId, newTitle)\r\n        .then(res => {\r\n            console.log(res)\r\n            dispatch(updateCardAC(cardId, newTitle))\r\n            dispatch(changeServerAnswerStatusAC(true))\r\n        })\r\n        .catch(error => {\r\n            dispatch(changeServerAnswerStatusAC(true))\r\n            alert(error)\r\n        })\r\n}\r\n\r\n\r\ntype cardsReducerActionType =\r\n    | ReturnType<typeof setCardsAC>\r\n    | ReturnType<typeof changeServerAnswerStatusAC>\r\n    | ReturnType<typeof addNewCardAC>\r\n    | ReturnType<typeof deleteCardAC>\r\n    | ReturnType<typeof updateCardAC>\r\n\r\n\r\n","import React, {\r\n    MouseEvent,\r\n    ChangeEvent,\r\n    useEffect,\r\n    useState\r\n} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deletePackTC, getPackTC, setPackTC, updatePackTC} from \"./paskReducer\";\r\nimport {TypeCards} from \"../../api/auth-api\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {TypeStatus} from \"../registration/registrationReducer\";\r\nimport Preloader from \"../../common/preloader\";\r\nimport s from \"./packs.module.css\";\r\nimport SuperButton1 from \"../superComponents/c2-SuperButton/SuperButton1\";\r\nimport SuperDoubleRange from \"../superComponents/c4-SuperDoubleRange/superDoubleRange\";\r\nimport Pagination from \"./Pagination\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PATH} from \"../../App\";\r\nimport {getCardsTC} from \"../cards/cardsReducer\";\r\nimport VerticalAlignTopIcon from '@material-ui/icons/VerticalAlignTop';\r\nimport VerticalAlignBottomIcon from '@material-ui/icons/VerticalAlignBottom';\r\nimport {Button} from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport AddIcon from '@material-ui/icons/Add';\r\ntype TypeSort = 'max' | 'min' | 'middle';\r\n\r\nconst Packs = () => {\r\n    const dispatch = useDispatch()\r\n    const status = useSelector<AppRootStateType, TypeStatus>(state => state.packs.status)\r\n    const error = useSelector<AppRootStateType, string>(state => state.packs.error)\r\n    const packs = useSelector<AppRootStateType, TypeCards[] | undefined>(state => state.packs.packs?.cardPacks)\r\n    const [packValue, setPackValue] = useState<string>('')\r\n    const [modal, setModal] = useState<boolean>(false)\r\n    const [id, setId] = useState<string | undefined>('')\r\n    const [searchPack, setSearch] = useState<string>('')\r\n    const [updateButton, setUpdateButton] = useState<boolean>(false)\r\n    const [value1, setValue1] = useState<number>(0);\r\n    const [value2, setValue2] = useState<number>(10);\r\n    let [sortPacks, setSortPacks] = useState<TypeSort>(\"middle\");\r\n    function sortByMax(a: TypeCards, b: TypeCards) {\r\n        if (a.cardsCount <= b.cardsCount) {\r\n            return 1\r\n        } else {\r\n            return -1\r\n        }\r\n    }\r\n    function sortByMin(a: TypeCards, b: TypeCards) {\r\n        if (a.cardsCount >= b.cardsCount) {\r\n            return 1\r\n        } else {\r\n            return -1\r\n        }\r\n    }\r\n\r\n    const filterPack = packs?.filter(pack => {\r\n        if (pack.name.toLowerCase().match(searchPack) && pack.cardsCount >= value1 && pack.cardsCount <= value2) {\r\n            if (sortPacks === \"middle\") {\r\n                return pack\r\n            } else if (sortPacks === \"max\") {\r\n                return packs.sort(sortByMax)\r\n            } else if (sortPacks === \"min\") {\r\n                return packs.sort(sortByMin)\r\n            }\r\n        }\r\n    })\r\n    useEffect(() => {\r\n        dispatch(getPackTC())\r\n\r\n    }, [dispatch])\r\n\r\n\r\n    const addPack = (event: MouseEvent<HTMLButtonElement>) => {\r\n        if (event.currentTarget.dataset.action === 'update') {\r\n            setUpdateButton(true)\r\n            setId(event.currentTarget.dataset.id)\r\n            setModal(true)\r\n        } else if (event.currentTarget.dataset.action === 'add') {\r\n            setUpdateButton(false)\r\n            setModal(true)\r\n        }\r\n    }\r\n    const setPack = (event: MouseEvent<HTMLButtonElement>) => {\r\n        if (event.currentTarget.dataset.update === 'update') {\r\n            dispatch(updatePackTC(id, packValue))\r\n            setPackValue('')\r\n            setModal(false)\r\n        } else if (event.currentTarget.dataset.update === 'add')\r\n            dispatch(setPackTC(packValue))\r\n        setPackValue('')\r\n        setModal(false)\r\n\r\n    }\r\n    const deletePack = (event: MouseEvent<HTMLButtonElement>) => {\r\n        dispatch(deletePackTC(event.currentTarget.dataset.id))\r\n    }\r\n\r\n    const changeValuePack = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPackValue(event.currentTarget.value)\r\n    }\r\n    const changeSearch = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(event.currentTarget.value)\r\n    }\r\n    const onCardsClick = (packsId: string) => {\r\n        dispatch(getCardsTC(packsId))\r\n    }\r\n\r\n    const sortMax = () => {\r\n        setSortPacks(\"max\")\r\n    }\r\n    const sortMin = () => {\r\n        setSortPacks(\"min\")\r\n    }\r\n\r\n    return <>\r\n        <div className={s.search}>\r\n            <div>\r\n                <span style={{fontSize:'20px',marginRight:'10px'}}>Search:</span>\r\n                <input placeholder='Enter name' value={searchPack} onChange={changeSearch} type=\"text\"/>\r\n            </div>\r\n            <div>\r\n                <div style={{fontWeight:'bold',textAlign:'center'}}>Filtering by the count of cards</div>\r\n\r\n                <SuperDoubleRange setValue2={setValue2} setValue1={setValue1} max={value2} min={value1}/>\r\n            </div>\r\n            <div className={s.sort}>\r\n                <VerticalAlignTopIcon onClick={sortMax}/>\r\n                <VerticalAlignBottomIcon onClick={sortMin}/>\r\n            </div>\r\n        </div>\r\n        <div className={s.pagination}>\r\n            <Pagination/>\r\n        </div>\r\n\r\n        <div style={{color: 'red'}}>{error && error}</div>\r\n        <div className={modal ? s.popup : s.hide}>\r\n            <div className={s.popupContent}>\r\n                <input value={packValue} onChange={changeValuePack} type=\"text\"/>\r\n                {updateButton ? <SuperButton1 data-update={'update'} onClick={setPack}>Update</SuperButton1> :\r\n                    <SuperButton1 data-update={'add'} onClick={setPack}>Add</SuperButton1>\r\n                }\r\n            </div>\r\n        </div>\r\n        {status === \"loading\" ? <Preloader/> :\r\n\r\n            <div className={s.table}>\r\n\r\n                <div className={s.header}>\r\n                    <div className={s.cell}>Name</div>\r\n                    <div className={s.cell}>Cards count</div>\r\n                    <div className={s.cell}>Updated</div>\r\n                    <div className={s.cell}>Url</div>\r\n                    <div className={s.cell}>\r\n                        <Button\r\n                            className={s.btn}\r\n                            data-action={'add'}\r\n                            onClick={addPack}\r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            size={'small'}\r\n                        > {<AddIcon />}</Button>\r\n                    </div>\r\n                </div>\r\n                <div className={s.gridTable}>\r\n                    {filterPack && filterPack.map((cardPack: TypeCards) => {\r\n\r\n                        return (\r\n                            <div className={s.tableRow} key={cardPack.updated}>\r\n                                <div className={s.cell}>{cardPack.name}</div>\r\n                                <div className={s.cell}>{cardPack.cardsCount}</div>\r\n                                <div className={s.cell}>{cardPack.updated}</div>\r\n                                <div className={s.cell}>{cardPack.path}</div>\r\n                                <div className={s.cell}>\r\n                                    <Button\r\n                                        onClick={deletePack}\r\n                                        data-id={cardPack._id}\r\n                                        variant=\"contained\"\r\n                                        color=\"default\"\r\n                                        size={'small'}\r\n                                    > {<DeleteIcon />}</Button>\r\n                                    <Button\r\n                                        data-action={'update'}\r\n                                        onClick={addPack}\r\n                                        data-id={cardPack._id}\r\n                                        variant=\"contained\"\r\n                                        color=\"default\"\r\n                                        size={'small'}\r\n                                    > {<UpdateIcon />}</Button>\r\n                                    <NavLink onClick={() => onCardsClick(cardPack._id)}\r\n                                             to={PATH.cards}>Cards\r\n                                    </NavLink>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        }  </>\r\n}\r\n\r\nexport default Packs;\r\n","import React from 'react'\r\nimport s from \"./Cards.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../store/store\"\r\nimport {cardsApi, CardType} from \"../../api/auth-api\"\r\nimport Preloader from \"../../common/preloader\"\r\nimport {addCardTC, deleteCardTC, updateCardTC} from \"./cardsReducer\"\r\n\r\nexport const Cards = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const cards = useSelector<AppRootStateType, Array<CardType> | []>(state => state.cards.cards)\r\n    const serverAnswerStatus = useSelector<AppRootStateType, boolean>(state => state.cards.serverAnswerStatus)\r\n    const id = useSelector<AppRootStateType, string | undefined>(state => state.packs.packs?.cardPacks[0]._id)\r\n\r\n    const addCard = () => {\r\n        let newTitle = prompt(\"Enter title\", \"New question\")\r\n        if (newTitle !== null) {\r\n            dispatch(addCardTC(id!, newTitle))\r\n        }\r\n    }\r\n    const deleteCard = (cardId: string) => {\r\n        dispatch(deleteCardTC(cardId))\r\n    }\r\n    const updateCard = (cardId: string) => {\r\n        let newTitle = prompt(\"Enter new title\", \"Some question\")\r\n        if (newTitle !== null) {\r\n            dispatch(updateCardTC(cardId, newTitle))\r\n        }\r\n    }\r\n\r\n    return <div className={s.cards}>\r\n        {serverAnswerStatus\r\n            ? <div className={s.table}>\r\n                <div className={s.header}>\r\n                    <div className={s.cell}>Question</div>\r\n                    <div className={s.cell}>Answer</div>\r\n                    <div className={s.cell}>Grade</div>\r\n                    <div className={s.cell}>Updated</div>\r\n                    <div className={s.cell}>\r\n                        <button onClick={addCard}>Add</button>\r\n                    </div>\r\n                </div>\r\n                <div className={s.gridTable}>\r\n                    {cards.map((card: CardType) => {\r\n                        return (\r\n                            <div className={s.tableRow} key={card._id}>\r\n                                <div className={s.cell}>{card.question}</div>\r\n                                <div className={s.cell}>{card.answer}</div>\r\n                                <div className={s.cell}>{card.grade}</div>\r\n                                <div className={s.cell}>{card.updated}</div>\r\n                                <div className={s.cell}>\r\n                                    <button onClick={() => deleteCard(card._id)}>Delete</button>\r\n                                    <button onClick={() => updateCard(card._id)}>Update</button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                    }\r\n                </div>\r\n            </div>\r\n            : <Preloader/>\r\n        }\r\n    </div>\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Login} from \"./components/login/Login\";\r\nimport {Registration} from \"./components/registration/Registration\";\r\nimport {Profile} from \"./components/profile/Profile\";\r\nimport {Page404} from \"./components/page404/Page404\";\r\nimport {PasswordRecovery} from \"./components/passwordRecovery/PasswordRecovery\";\r\nimport {NewPassword} from \"./components/newPassword/NewPassword\";\r\nimport {TestPage} from \"./components/testPage/TestPage\";\r\nimport {Navigation} from \"./components/navigation/Navigation\";\r\nimport Packs from \"./components/packs/packs\";\r\nimport {Cards} from './components/cards/Cards';\r\n\r\nexport const PATH = {\r\n    login: \"/login\",\r\n    registration: \"/registration\",\r\n    profile: \"/profile\",\r\n    page404: \"/page404\",\r\n    passwordRecovery: \"/passwordRecovery\",\r\n    newPassword: \"/newPassword\",\r\n    testPage: \"/testPage\",\r\n    pageNotFound: \"*\",\r\n    packs: \"/packs\",\r\n    cards: \"/cards\",\r\n    startPage: \"/\"\r\n}\r\n\r\nexport const App = () => {\r\n    return (\r\n        <HashRouter>\r\n            <div>\r\n                <Navigation/>\r\n                <div>\r\n                    <Switch>\r\n                        <Route path={PATH.login}\r\n                               render={() => <Login/>}/>\r\n                        <Route path={PATH.registration}\r\n                               render={() => <Registration/>}/>\r\n                        <Route path={PATH.profile}\r\n                               render={() => <Profile/>}/>\r\n                        <Route path={PATH.page404}\r\n                               render={() => <Page404/>}/>\r\n                        <Route path={PATH.passwordRecovery}\r\n                               render={() => <PasswordRecovery/>}/>\r\n                        <Route path={PATH.newPassword}\r\n                               render={() => <NewPassword/>}/>\r\n                        <Route path={PATH.packs}\r\n                               render={() => <Packs/>}/>\r\n                        <Route path={PATH.cards}\r\n                               render={() => <Cards/>}/>\r\n                        <Route path={PATH.testPage}\r\n                               render={() => <TestPage/>}/>\r\n                        <Redirect from={PATH.startPage} to={PATH.login}/>\r\n                        <Redirect from={PATH.pageNotFound} to={PATH.page404}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import {createStore} from \"redux\";\r\nimport {applyMiddleware} from \"redux\";\r\nimport {combineReducers} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {ReducerRegister} from \"../components/registration/registrationReducer\";\r\nimport {authReducer} from \"../components/login/auth-reducer\";\r\nimport {passwordRecoveryReducer} from \"../components/passwordRecovery/passwordRecoveryReducer\";\r\nimport {packsReducer} from \"../components/packs/paskReducer\";\r\nimport {cardsReducer} from \"../components/cards/cardsReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    register: ReducerRegister,\r\n    auth: authReducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./App\";\nimport { Provider } from 'react-redux';\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Cards_cards__2SFTE\",\"table\":\"Cards_table__3BFtO\",\"header\":\"Cards_header__3d5aI\",\"gridTable\":\"Cards_gridTable__6oicU\",\"tableRow\":\"Cards_tableRow__19hi7\",\"cell\":\"Cards_cell__Du9iV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__2Z8ne\",\"input\":\"Login_input__zuRwJ\",\"button\":\"Login_button__1Cp3v\",\"error\":\"Login_error__xqEQJ\",\"loading\":\"Login_loading__1yopJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Registration_container__3VgyV\",\"input\":\"Registration_input__12Mad\",\"button\":\"Registration_button__2o3tW\",\"error\":\"Registration_error__2tPsH\",\"signIn\":\"Registration_signIn__1yVFz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageBlock\":\"PasswordRecovery_pageBlock__sDugA\",\"secondBlock\":\"PasswordRecovery_secondBlock__1TSVl\",\"input\":\"PasswordRecovery_input__3FiHv\",\"error\":\"PasswordRecovery_error__3wXw-\",\"button\":\"PasswordRecovery_button__29LP6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SuperButton1_btn__38i74\",\"default\":\"SuperButton1_default__19djC\",\"disabled\":\"SuperButton1_disabled__b37VM\",\"red\":\"SuperButton1_red__1vLIb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3c4N5\",\"errorInput\":\"SuperInputText_errorInput__18Fxk\",\"error\":\"SuperInputText_error__2cdAa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__a3st2\",\"loading\":\"Profile_loading__XWVgp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"Page404_mainBlock__3gMO_\",\"image\":\"Page404_image__27YBu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"packs_table__3GTnh\",\"header\":\"packs_header__3e8VA\",\"gridTable\":\"packs_gridTable__2ThKN\",\"tableRow\":\"packs_tableRow__2eeZ8\",\"cell\":\"packs_cell__gVtuu\",\"btn\":\"packs_btn__1_065\",\"popup\":\"packs_popup__2jtdY\",\"popupContent\":\"packs_popupContent__1PIOJ\",\"hide\":\"packs_hide__26pxT\",\"search\":\"packs_search__3W33k\",\"pagination\":\"packs_pagination__1xE4r\",\"page\":\"packs_page__2lulE\",\"active\":\"packs_active__1jUim\",\"sort\":\"packs_sort__3Pmwq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3HJNO\",\"red\":\"SuperButton_red__3O53E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__-VPPs\",\"spanClassName\":\"SuperCheckbox_spanClassName__1QDb-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__1VK1h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"TestPage_blue__3sxPH\",\"column\":\"TestPage_column__Hk85v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationBlock\":\"Navigation_navigationBlock__1Cg77\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__2cL14\"};"],"sourceRoot":""}